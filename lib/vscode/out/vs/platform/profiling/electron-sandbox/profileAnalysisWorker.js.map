{"version":3,"sources":["out-vscode-reh-web/vs/platform/profiling/electron-sandbox/fake","out-vscode-reh-web/vs/platform/profiling/electron-sandbox/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/browser/trustedTypes.ts","out-vscode-reh-web/vs/platform/profiling/electron-sandbox/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/extpath.ts","out-vscode-reh-web/vs/platform/profiling/electron-sandbox/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/ternarySearchTree.ts","out-vscode-reh-web/vs/platform/profiling/electron-sandbox/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/network.ts","out-vscode-reh-web/vs/platform/profiling/electron-sandbox/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/resources.ts","out-vscode-reh-web/vs/platform/profiling/electron-sandbox/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/browser/defaultWorkerFactory.ts","out-vscode-reh-web/vs/platform/profiling/electron-sandbox/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/errorMessage.ts","out-vscode-reh-web/vs/platform/profiling/electron-sandbox/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/contextkey/common/scanner.ts","out-vscode-reh-web/vs/platform/profiling/electron-sandbox/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/instantiation/common/descriptors.ts","out-vscode-reh-web/vs/platform/profiling/electron-sandbox/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/instantiation/common/extensions.ts","out-vscode-reh-web/vs/platform/profiling/electron-sandbox/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/instantiation/common/instantiation.ts","out-vscode-reh-web/vs/platform/profiling/electron-sandbox/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/contextkey/common/contextkey.ts","out-vscode-reh-web/vs/platform/profiling/electron-sandbox/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/log/common/log.ts","out-vscode-reh-web/vs/platform/profiling/electron-sandbox/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/profiling/common/profiling.ts","out-vscode-reh-web/vs/platform/profiling/electron-sandbox/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/profiling/common/profilingModel.ts","out-vscode-reh-web/vs/platform/profiling/electron-sandbox/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/profiling/common/profilingTelemetrySpec.ts","out-vscode-reh-web/vs/platform/profiling/electron-sandbox/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/telemetry/common/telemetry.ts","out-vscode-reh-web/vs/platform/profiling/electron-sandbox/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/profiling/electron-sandbox/profileAnalysisWorkerService.ts","out-vscode-reh-web/vs/platform/profiling/electron-sandbox/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/profiling/electron-sandbox/profileAnalysisWorker.ts"],"sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\n\nexport function createTrustedTypesPolicy<Options extends TrustedTypePolicyOptions>(\n\tpolicyName: string,\n\tpolicyOptions?: Options,\n): undefined | Pick<TrustedTypePolicy<Options>, 'name' | Extract<keyof Options, keyof TrustedTypePolicyOptions>> {\n\n\tinterface IMonacoEnvironment {\n\t\tcreateTrustedTypesPolicy<Options extends TrustedTypePolicyOptions>(\n\t\t\tpolicyName: string,\n\t\t\tpolicyOptions?: Options,\n\t\t): undefined | Pick<TrustedTypePolicy<Options>, 'name' | Extract<keyof Options, keyof TrustedTypePolicyOptions>>;\n\t}\n\tconst monacoEnvironment: IMonacoEnvironment | undefined = (globalThis as any).MonacoEnvironment;\n\n\tif (monacoEnvironment?.createTrustedTypesPolicy) {\n\t\ttry {\n\t\t\treturn monacoEnvironment.createTrustedTypesPolicy(policyName, policyOptions);\n\t\t} catch (err) {\n\t\t\tonUnexpectedError(err);\n\t\t\treturn undefined;\n\t\t}\n\t}\n\ttry {\n\t\treturn (globalThis as any).trustedTypes?.createPolicy(policyName, policyOptions);\n\t} catch (err) {\n\t\tonUnexpectedError(err);\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isAbsolute, join, normalize, posix, sep } from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\nimport { equalsIgnoreCase, rtrim, startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { isNumber } from 'vs/base/common/types';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Takes a Windows OS path (using backward or forward slashes) and turns it into a posix path:\n * - turns backward slashes into forward slashes\n * - makes it absolute if it starts with a drive letter\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toPosixPath(osPath: string) {\n\tif (osPath.indexOf('/') === -1) {\n\t\tosPath = toSlashes(osPath);\n\t}\n\tif (/^[a-zA-Z]:(\\/|$)/.test(osPath)) { // starts with a drive letter\n\t\tosPath = '/' + osPath;\n\t}\n\treturn osPath;\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\tcode = path.charCodeAt(1);\n\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\n\tcode = path.charCodeAt(pos + 1);\n\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqual` instead. If you are\n * in a context without services, consider to pass down the `extUri` from the outside\n * or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqualOrParent` instead. If\n * you are in a context without services, consider to pass down the `extUri` from the\n * outside, or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqualOrParent(base: string, parentCandidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (base === parentCandidate) {\n\t\treturn true;\n\t}\n\n\tif (!base || !parentCandidate) {\n\t\treturn false;\n\t}\n\n\tif (parentCandidate.length > base.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(base, parentCandidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (parentCandidate.length === base.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = parentCandidate.length;\n\t\tif (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn base.charAt(sepOffset) === separator;\n\t}\n\n\tif (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n\t\tparentCandidate += separator;\n\t}\n\n\treturn base.indexOf(parentCandidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\treturn removeTrailingPathSeparator(candidate);\n}\n\nexport function removeTrailingPathSeparator(candidate: string): string {\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn hasDriveLetter(pathNormalized) &&\n\t\t\t(path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function hasDriveLetter(path: string, isWindowsOS: boolean = isWindows): boolean {\n\tif (isWindowsOS) {\n\t\treturn isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === CharCode.Colon;\n\t}\n\n\treturn false;\n}\n\nexport function getDriveLetter(path: string, isWindowsOS: boolean = isWindows): string | undefined {\n\treturn hasDriveLetter(path, isWindowsOS) ? path[0] : undefined;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase?: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n\nexport interface IPathWithLineAndColumn {\n\tpath: string;\n\tline?: number;\n\tcolumn?: number;\n}\n\nexport function parseLineAndColumnAware(rawPath: string): IPathWithLineAndColumn {\n\tconst segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n\n\tlet path: string | undefined = undefined;\n\tlet line: number | undefined = undefined;\n\tlet column: number | undefined = undefined;\n\n\tfor (const segment of segments) {\n\t\tconst segmentAsNumber = Number(segment);\n\t\tif (!isNumber(segmentAsNumber)) {\n\t\t\tpath = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n\t\t} else if (line === undefined) {\n\t\t\tline = segmentAsNumber;\n\t\t} else if (column === undefined) {\n\t\t\tcolumn = segmentAsNumber;\n\t\t}\n\t}\n\n\tif (!path) {\n\t\tthrow new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n\t}\n\n\treturn {\n\t\tpath,\n\t\tline: line !== undefined ? line : undefined,\n\t\tcolumn: column !== undefined ? column : line !== undefined ? 1 : undefined // if we have a line, make sure column is also set\n\t};\n}\n\nconst pathChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nconst windowsSafePathFirstChars = 'BDEFGHIJKMOQRSTUVWXYZbdefghijkmoqrstuvwxyz0123456789';\n\nexport function randomPath(parent?: string, prefix?: string, randomLength = 8): string {\n\tlet suffix = '';\n\tfor (let i = 0; i < randomLength; i++) {\n\t\tlet pathCharsTouse: string;\n\t\tif (i === 0 && isWindows && !prefix && (randomLength === 3 || randomLength === 4)) {\n\n\t\t\t// Windows has certain reserved file names that cannot be used, such\n\t\t\t// as AUX, CON, PRN, etc. We want to avoid generating a random name\n\t\t\t// that matches that pattern, so we use a different set of characters\n\t\t\t// for the first character of the name that does not include any of\n\t\t\t// the reserved names first characters.\n\n\t\t\tpathCharsTouse = windowsSafePathFirstChars;\n\t\t} else {\n\t\t\tpathCharsTouse = pathChars;\n\t\t}\n\n\t\tsuffix += pathCharsTouse.charAt(Math.floor(Math.random() * pathCharsTouse.length));\n\t}\n\n\tlet randomFileName: string;\n\tif (prefix) {\n\t\trandomFileName = `${prefix}-${suffix}`;\n\t} else {\n\t\trandomFileName = suffix;\n\t}\n\n\tif (parent) {\n\t\treturn join(parent, randomFileName);\n\t}\n\n\treturn randomFileName;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { shuffle } from 'vs/base/common/arrays';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { compare, compareIgnoreCase, compareSubstring, compareSubstringIgnoreCase } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IKeyIterator<K> {\n\treset(key: K): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator<string> {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class ConfigKeysIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Period) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nexport class PathIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _valueLen!: number;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _splitOnBackslash: boolean = true,\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\tthis._value = key;\n\t\tthis._valueLen = key.length;\n\t\tfor (let pos = key.length - 1; pos >= 0; pos--, this._valueLen--) {\n\t\t\tconst ch = this._value.charCodeAt(pos);\n\t\t\tif (!(ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._valueLen;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._valueLen; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nconst enum UriIteratorState {\n\tScheme = 1, Authority = 2, Path = 3, Query = 4, Fragment = 5\n}\n\nexport class UriIterator implements IKeyIterator<URI> {\n\n\tprivate _pathIterator!: PathIterator;\n\tprivate _value!: URI;\n\tprivate _states: UriIteratorState[] = [];\n\tprivate _stateIdx: number = 0;\n\n\tconstructor(\n\t\tprivate readonly _ignorePathCasing: (uri: URI) => boolean,\n\t\tprivate readonly _ignoreQueryAndFragment: (uri: URI) => boolean) { }\n\n\treset(key: URI): this {\n\t\tthis._value = key;\n\t\tthis._states = [];\n\t\tif (this._value.scheme) {\n\t\t\tthis._states.push(UriIteratorState.Scheme);\n\t\t}\n\t\tif (this._value.authority) {\n\t\t\tthis._states.push(UriIteratorState.Authority);\n\t\t}\n\t\tif (this._value.path) {\n\t\t\tthis._pathIterator = new PathIterator(false, !this._ignorePathCasing(key));\n\t\t\tthis._pathIterator.reset(key.path);\n\t\t\tif (this._pathIterator.value()) {\n\t\t\t\tthis._states.push(UriIteratorState.Path);\n\t\t\t}\n\t\t}\n\t\tif (!this._ignoreQueryAndFragment(key)) {\n\t\t\tif (this._value.query) {\n\t\t\t\tthis._states.push(UriIteratorState.Query);\n\t\t\t}\n\t\t\tif (this._value.fragment) {\n\t\t\t\tthis._states.push(UriIteratorState.Fragment);\n\t\t\t}\n\t\t}\n\t\tthis._stateIdx = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext()) {\n\t\t\tthis._pathIterator.next();\n\t\t} else {\n\t\t\tthis._stateIdx += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext())\n\t\t\t|| this._stateIdx < this._states.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn compareIgnoreCase(a, this._value.scheme);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn compareIgnoreCase(a, this._value.authority);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.cmp(a);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn compare(a, this._value.query);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn compare(a, this._value.fragment);\n\t\t}\n\t\tthrow new Error();\n\t}\n\n\tvalue(): string {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn this._value.scheme;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn this._value.authority;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.value();\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn this._value.query;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn this._value.fragment;\n\t\t}\n\t\tthrow new Error();\n\t}\n}\nclass TernarySearchTreeNode<K, V> {\n\theight: number = 1;\n\tsegment!: string;\n\tvalue: V | undefined;\n\tkey: K | undefined;\n\tleft: TernarySearchTreeNode<K, V> | undefined;\n\tmid: TernarySearchTreeNode<K, V> | undefined;\n\tright: TernarySearchTreeNode<K, V> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n\n\trotateLeft() {\n\t\tconst tmp = this.right!;\n\t\tthis.right = tmp.left;\n\t\ttmp.left = this;\n\t\tthis.updateHeight();\n\t\ttmp.updateHeight();\n\t\treturn tmp;\n\t}\n\n\trotateRight() {\n\t\tconst tmp = this.left!;\n\t\tthis.left = tmp.right;\n\t\ttmp.right = this;\n\t\tthis.updateHeight();\n\t\ttmp.updateHeight();\n\t\treturn tmp;\n\t}\n\n\tupdateHeight() {\n\t\tthis.height = 1 + Math.max(this.heightLeft, this.heightRight);\n\t}\n\n\tbalanceFactor() {\n\t\treturn this.heightRight - this.heightLeft;\n\t}\n\n\tget heightLeft() {\n\t\treturn this.left?.height ?? 0;\n\t}\n\n\tget heightRight() {\n\t\treturn this.right?.height ?? 0;\n\t}\n}\n\nconst enum Dir {\n\tLeft = -1,\n\tMid = 0,\n\tRight = 1\n}\n\nexport class TernarySearchTree<K, V> {\n\n\tstatic forUris<E>(ignorePathCasing: (key: URI) => boolean = () => false, ignoreQueryAndFragment: (key: URI) => boolean = () => false): TernarySearchTree<URI, E> {\n\t\treturn new TernarySearchTree<URI, E>(new UriIterator(ignorePathCasing, ignoreQueryAndFragment));\n\t}\n\n\tstatic forPaths<E>(ignorePathCasing = false): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new PathIterator(undefined, !ignorePathCasing));\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new StringIterator());\n\t}\n\n\tstatic forConfigKeys<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new ConfigKeysIterator());\n\t}\n\n\tprivate _iter: IKeyIterator<K>;\n\tprivate _root: TernarySearchTreeNode<K, V> | undefined;\n\n\tconstructor(segments: IKeyIterator<K>) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\t/**\n\t * Fill the tree with the same value of the given keys\n\t */\n\tfill(element: V, keys: readonly K[]): void;\n\t/**\n\t * Fill the tree with given [key,value]-tuples\n\t */\n\tfill(values: readonly [K, V][]): void;\n\tfill(values: readonly [K, V][] | V, keys?: readonly K[]): void {\n\t\tif (keys) {\n\t\t\tconst arr = keys.slice(0);\n\t\t\tshuffle(arr);\n\t\t\tfor (const k of arr) {\n\t\t\t\tthis.set(k, (<V>values));\n\t\t\t}\n\t\t} else {\n\t\t\tconst arr = (<[K, V][]>values).slice(0);\n\t\t\tshuffle(arr);\n\t\t\tfor (const entry of arr) {\n\t\t\t\tthis.set(entry[0], entry[1]);\n\t\t\t}\n\t\t}\n\t}\n\n\tset(key: K, element: V): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<K, V>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<K, V>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\t\tconst stack: [Dir, TernarySearchTreeNode<K, V>][] = [];\n\n\t\t// find insert_node\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tstack.push([Dir.Left, node]);\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tstack.push([Dir.Right, node]);\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tstack.push([Dir.Mid, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// set value\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\n\t\t// balance\n\t\tfor (let i = stack.length - 1; i >= 0; i--) {\n\t\t\tconst node = stack[i][1];\n\n\t\t\tnode.updateHeight();\n\t\t\tconst bf = node.balanceFactor();\n\n\t\t\tif (bf < -1 || bf > 1) {\n\t\t\t\t// needs rotate\n\t\t\t\tconst d1 = stack[i][0];\n\t\t\t\tconst d2 = stack[i + 1][0];\n\n\t\t\t\tif (d1 === Dir.Right && d2 === Dir.Right) {\n\t\t\t\t\t//right, right -> rotate left\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\n\t\t\t\t} else if (d1 === Dir.Left && d2 === Dir.Left) {\n\t\t\t\t\t// left, left -> rotate right\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\n\t\t\t\t} else if (d1 === Dir.Right && d2 === Dir.Left) {\n\t\t\t\t\t// right, left -> double rotate right, left\n\t\t\t\t\tnode.right = stack[i + 1][1] = stack[i + 1][1].rotateRight();\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\n\t\t\t\t} else if (d1 === Dir.Left && d2 === Dir.Right) {\n\t\t\t\t\t// left, right -> double rotate left, right\n\t\t\t\t\tnode.left = stack[i + 1][1] = stack[i + 1][1].rotateLeft();\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t}\n\n\t\t\t\t// patch path to parent\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tswitch (stack[i - 1][0]) {\n\t\t\t\t\t\tcase Dir.Left:\n\t\t\t\t\t\t\tstack[i - 1][1].left = stack[i][1];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Dir.Right:\n\t\t\t\t\t\t\tstack[i - 1][1].right = stack[i][1];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Dir.Mid:\n\t\t\t\t\t\t\tstack[i - 1][1].mid = stack[i][1];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._root = stack[0][1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn oldElement;\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this._getNode(key)?.value;\n\t}\n\n\tprivate _getNode(key: K) {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\thas(key: K): boolean {\n\t\tconst node = this._getNode(key);\n\t\treturn !(node?.value === undefined && node?.mid === undefined);\n\t}\n\n\tdelete(key: K): void {\n\t\treturn this._delete(key, false);\n\t}\n\n\tdeleteSuperstr(key: K): void {\n\t\treturn this._delete(key, true);\n\t}\n\n\tprivate _delete(key: K, superStr: boolean): void {\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [Dir, TernarySearchTreeNode<K, V>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([Dir.Left, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([Dir.Right, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([Dir.Mid, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!node) {\n\t\t\t// node not found\n\t\t\treturn;\n\t\t}\n\n\t\tif (superStr) {\n\t\t\t// removing children, reset height\n\t\t\tnode.left = undefined;\n\t\t\tnode.mid = undefined;\n\t\t\tnode.right = undefined;\n\t\t\tnode.height = 1;\n\t\t} else {\n\t\t\t// removing element\n\t\t\tnode.key = undefined;\n\t\t\tnode.value = undefined;\n\t\t}\n\n\t\t// BST node removal\n\t\tif (!node.mid && !node.value) {\n\t\t\tif (node.left && node.right) {\n\t\t\t\t// full node\n\t\t\t\t// replace deleted-node with the min-node of the right branch.\n\t\t\t\t// If there is no true min-node leave things as they are\n\t\t\t\tconst min = this._min(node.right);\n\t\t\t\tif (min.key) {\n\t\t\t\t\tconst { key, value, segment } = min;\n\t\t\t\t\tthis._delete(min.key, false);\n\t\t\t\t\tnode.key = key;\n\t\t\t\t\tnode.value = value;\n\t\t\t\t\tnode.segment = segment;\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t// empty or half empty\n\t\t\t\tconst newChild = node.left ?? node.right;\n\t\t\t\tif (stack.length > 0) {\n\t\t\t\t\tconst [dir, parent] = stack[stack.length - 1];\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase Dir.Left: parent.left = newChild; break;\n\t\t\t\t\t\tcase Dir.Mid: parent.mid = newChild; break;\n\t\t\t\t\t\tcase Dir.Right: parent.right = newChild; break;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._root = newChild;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// AVL balance\n\t\tfor (let i = stack.length - 1; i >= 0; i--) {\n\t\t\tconst node = stack[i][1];\n\n\t\t\tnode.updateHeight();\n\t\t\tconst bf = node.balanceFactor();\n\t\t\tif (bf > 1) {\n\t\t\t\t// right heavy\n\t\t\t\tif (node.right!.balanceFactor() >= 0) {\n\t\t\t\t\t// right, right -> rotate left\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\t\t\t\t} else {\n\t\t\t\t\t// right, left -> double rotate\n\t\t\t\t\tnode.right = node.right!.rotateRight();\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\t\t\t\t}\n\n\t\t\t} else if (bf < -1) {\n\t\t\t\t// left heavy\n\t\t\t\tif (node.left!.balanceFactor() <= 0) {\n\t\t\t\t\t// left, left -> rotate right\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\t\t\t\t} else {\n\t\t\t\t\t// left, right -> double rotate\n\t\t\t\t\tnode.left = node.left!.rotateLeft();\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// patch path to parent\n\t\t\tif (i > 0) {\n\t\t\t\tswitch (stack[i - 1][0]) {\n\t\t\t\t\tcase Dir.Left:\n\t\t\t\t\t\tstack[i - 1][1].left = stack[i][1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Dir.Right:\n\t\t\t\t\t\tstack[i - 1][1].right = stack[i][1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Dir.Mid:\n\t\t\t\t\t\tstack[i - 1][1].mid = stack[i][1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._root = stack[0][1];\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _min(node: TernarySearchTreeNode<K, V>): TernarySearchTreeNode<K, V> {\n\t\twhile (node.left) {\n\t\t\tnode = node.left;\n\t\t}\n\t\treturn node;\n\t}\n\n\tfindSubstr(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: V | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: K): IterableIterator<[K, V]> | undefined {\n\t\treturn this._findSuperstrOrElement(key, false);\n\t}\n\n\tprivate _findSuperstrOrElement(key: K, allowValue: true): IterableIterator<[K, V]> | V | undefined;\n\tprivate _findSuperstrOrElement(key: K, allowValue: false): IterableIterator<[K, V]> | undefined;\n\tprivate _findSuperstrOrElement(key: K, allowValue: boolean): IterableIterator<[K, V]> | V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tif (allowValue) {\n\t\t\t\t\t\treturn node.value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn this._entries(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\thasElementOrSubtree(key: K): boolean {\n\t\treturn this._findSuperstrOrElement(key, true) !== undefined;\n\t}\n\n\tforEach(callback: (value: V, index: K) => any): void {\n\t\tfor (const [key, value] of this) {\n\t\t\tcallback(value, key);\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\tyield* this._entries(this._root);\n\t}\n\n\tprivate _entries(node: TernarySearchTreeNode<K, V> | undefined): IterableIterator<[K, V]> {\n\t\tconst result: [K, V][] = [];\n\t\tthis._dfsEntries(node, result);\n\t\treturn result[Symbol.iterator]();\n\t}\n\n\tprivate _dfsEntries(node: TernarySearchTreeNode<K, V> | undefined, bucket: [K, V][]) {\n\t\t// DFS\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tif (node.left) {\n\t\t\tthis._dfsEntries(node.left, bucket);\n\t\t}\n\t\tif (node.value) {\n\t\t\tbucket.push([node.key!, node.value]);\n\t\t}\n\t\tif (node.mid) {\n\t\t\tthis._dfsEntries(node.mid, bucket);\n\t\t}\n\t\tif (node.right) {\n\t\t\tthis._dfsEntries(node.right, bucket);\n\t\t}\n\t}\n\n\t// for debug/testing\n\t_isBalanced(): boolean {\n\t\tconst nodeIsBalanced = (node: TernarySearchTreeNode<any, any> | undefined): boolean => {\n\t\t\tif (!node) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst bf = node.balanceFactor();\n\t\t\tif (bf < -1 || bf > 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn nodeIsBalanced(node.left) && nodeIsBalanced(node.right);\n\t\t};\n\t\treturn nodeIsBalanced(this._root);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as errors from 'vs/base/common/errors';\nimport * as platform from 'vs/base/common/platform';\nimport { equalsIgnoreCase, startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport * as paths from 'vs/base/common/path';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const vscodeManagedRemoteResource = 'vscode-managed-remote-resource';\n\n\texport const vscodeUserData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeNotebookCell = 'vscode-notebook-cell';\n\texport const vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n\texport const vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n\texport const vscodeInteractiveInput = 'vscode-interactive-input';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const vscodeWorkspaceTrust = 'vscode-workspace-trust';\n\n\texport const vscodeTerminal = 'vscode-terminal';\n\n\t/** Scheme used for code blocks in chat. */\n\texport const vscodeChatCodeBlock = 'vscode-chat-code-block';\n\n\t/**\n\t * Scheme used for backing documents created by copilot for chat.\n\t */\n\texport const vscodeCopilotBackingChatCodeBlock = 'vscode-copilot-chat-code-block';\n\n\t/** Scheme used for LHS of code compare (aka diff) blocks in chat. */\n\texport const vscodeChatCodeCompareBlock = 'vscode-chat-code-compare-block';\n\n\t/** Scheme used for the chat input editor. */\n\texport const vscodeChatSesssion = 'vscode-chat-editor';\n\n\t/**\n\t * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n\t */\n\texport const webviewPanel = 'webview-panel';\n\n\t/**\n\t * Scheme used for loading the wrapper html and script in webviews.\n\t */\n\texport const vscodeWebview = 'vscode-webview';\n\n\t/**\n\t * Scheme used for extension pages\n\t */\n\texport const extension = 'extension';\n\n\t/**\n\t * Scheme used as a replacement of `file` scheme to load\n\t * files with our custom protocol handler (desktop only).\n\t */\n\texport const vscodeFileResource = 'vscode-file';\n\n\t/**\n\t * Scheme used for temporary resources\n\t */\n\texport const tmp = 'tmp';\n\n\t/**\n\t * Scheme used vs live share\n\t */\n\texport const vsls = 'vsls';\n\n\t/**\n\t * Scheme used for the Source Control commit input's text document\n\t */\n\texport const vscodeSourceControl = 'vscode-scm';\n\n\t/**\n\t * Scheme used for input box for creating comments.\n\t */\n\texport const commentsInput = 'comment';\n\n\t/**\n\t * Scheme used for special rendering of settings in the release notes\n\t */\n\texport const codeSetting = 'code-setting';\n}\n\nexport function matchesScheme(target: URI | string, scheme: string): boolean {\n\tif (URI.isUri(target)) {\n\t\treturn equalsIgnoreCase(target.scheme, scheme);\n\t} else {\n\t\treturn startsWithIgnoreCase(target, scheme + ':');\n\t}\n}\n\nexport function matchesSomeScheme(target: URI | string, ...schemes: string[]): boolean {\n\treturn schemes.some(scheme => matchesScheme(target, scheme));\n}\n\nexport const connectionTokenCookieName = 'vscode-tkn';\nexport const connectionTokenQueryName = 'tkn';\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\tprivate _serverRootPath: string = '/';\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tsetServerRootPath(product: { quality?: string; commit?: string }, serverBasePath: string | undefined): void {\n\t\tthis._serverRootPath = getServerRootPath(product, serverBasePath);\n\t}\n\n\tgetServerRootPath(): string {\n\t\treturn this._serverRootPath;\n\t}\n\n\tprivate get _remoteResourcesPath(): string {\n\t\treturn paths.posix.join(this._serverRootPath, Schemas.vscodeRemoteResource);\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\tgetPreferredWebSchema(): 'http' | 'https' {\n\t\treturn this._preferredWebSchema;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\ttry {\n\t\t\t\treturn this._delegate(uri);\n\t\t\t} catch (err) {\n\t\t\t\terrors.onUnexpectedError(err);\n\t\t\t\treturn uri;\n\t\t\t}\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\tconst port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: `${host}:${port}`,\n\t\t\tpath: platform.isWeb\n\t\t\t\t? (window.location.pathname + \"/\" + this._remoteResourcesPath).replace(/\\/\\/+/g, \"/\")\n\t\t\t\t: this._remoteResourcesPath,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n\nexport function getServerRootPath(product: { quality?: string; commit?: string }, basePath: string | undefined): string {\n\treturn paths.posix.join(basePath ?? '/', `${product.quality ?? 'oss'}-${product.commit ?? 'dev'}`);\n}\n\n/**\n * A string pointing to a path inside the app. It should not begin with ./ or ../\n */\nexport type AppResourcePath = (\n\t`a${string}` | `b${string}` | `c${string}` | `d${string}` | `e${string}` | `f${string}`\n\t| `g${string}` | `h${string}` | `i${string}` | `j${string}` | `k${string}` | `l${string}`\n\t| `m${string}` | `n${string}` | `o${string}` | `p${string}` | `q${string}` | `r${string}`\n\t| `s${string}` | `t${string}` | `u${string}` | `v${string}` | `w${string}` | `x${string}`\n\t| `y${string}` | `z${string}`\n);\n\nexport const builtinExtensionsPath: AppResourcePath = 'vs/../../extensions';\nexport const nodeModulesPath: AppResourcePath = 'vs/../../node_modules';\nexport const nodeModulesAsarPath: AppResourcePath = 'vs/../../node_modules.asar';\nexport const nodeModulesAsarUnpackedPath: AppResourcePath = 'vs/../../node_modules.asar.unpacked';\n\nexport const VSCODE_AUTHORITY = 'vscode-app';\n\nclass FileAccessImpl {\n\n\tprivate static readonly FALLBACK_AUTHORITY = VSCODE_AUTHORITY;\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\tasBrowserUri(resourcePath: AppResourcePath | ''): URI {\n\t\tconst uri = this.toUri(resourcePath, require);\n\t\treturn this.uriToBrowserUri(uri);\n\t}\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\turiToBrowserUri(uri: URI): URI {\n\t\t// Handle remote URIs via `RemoteAuthorities`\n\t\tif (uri.scheme === Schemas.vscodeRemote) {\n\t\t\treturn RemoteAuthorities.rewrite(uri);\n\t\t}\n\n\t\t// Convert to `vscode-file` resource..\n\t\tif (\n\t\t\t// ...only ever for `file` resources\n\t\t\turi.scheme === Schemas.file &&\n\t\t\t(\n\t\t\t\t// ...and we run in native environments\n\t\t\t\tplatform.isNative ||\n\t\t\t\t// ...or web worker extensions on desktop\n\t\t\t\t(platform.webWorkerOrigin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`)\n\t\t\t)\n\t\t) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.vscodeFileResource,\n\t\t\t\t// We need to provide an authority here so that it can serve\n\t\t\t\t// as origin for network and loading matters in chromium.\n\t\t\t\t// If the URI is not coming with an authority already, we\n\t\t\t\t// add our own\n\t\t\t\tauthority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\tasFileUri(resourcePath: AppResourcePath | ''): URI {\n\t\tconst uri = this.toUri(resourcePath, require);\n\t\treturn this.uriToFileUri(uri);\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\turiToFileUri(uri: URI): URI {\n\t\t// Only convert the URI if it is `vscode-file:` scheme\n\t\tif (uri.scheme === Schemas.vscodeFileResource) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.file,\n\t\t\t\t// Only preserve the `authority` if it is different from\n\t\t\t\t// our fallback authority. This ensures we properly preserve\n\t\t\t\t// Windows UNC paths that come with their own authority.\n\t\t\t\tauthority: uri.authority !== FileAccessImpl.FALLBACK_AUTHORITY ? uri.authority : null,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\tprivate toUri(uriOrModule: URI | string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI {\n\t\tif (URI.isUri(uriOrModule)) {\n\t\t\treturn uriOrModule;\n\t\t}\n\n\t\treturn URI.parse(moduleIdToUrl.toUrl(uriOrModule));\n\t}\n}\n\nexport const FileAccess = new FileAccessImpl();\n\n\nexport namespace COI {\n\n\tconst coiHeaders = new Map<'3' | '2' | '1' | string, Record<string, string>>([\n\t\t['1', { 'Cross-Origin-Opener-Policy': 'same-origin' }],\n\t\t['2', { 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n\t\t['3', { 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n\t]);\n\n\texport const CoopAndCoep = Object.freeze(coiHeaders.get('3'));\n\n\tconst coiSearchParamName = 'vscode-coi';\n\n\t/**\n\t * Extract desired headers from `vscode-coi` invocation\n\t */\n\texport function getHeadersFromQuery(url: string | URI | URL): Record<string, string> | undefined {\n\t\tlet params: URLSearchParams | undefined;\n\t\tif (typeof url === 'string') {\n\t\t\tparams = new URL(url).searchParams;\n\t\t} else if (url instanceof URL) {\n\t\t\tparams = url.searchParams;\n\t\t} else if (URI.isUri(url)) {\n\t\t\tparams = new URL(url.toString(true)).searchParams;\n\t\t}\n\t\tconst value = params?.get(coiSearchParamName);\n\t\tif (!value) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn coiHeaders.get(value);\n\t}\n\n\t/**\n\t * Add the `vscode-coi` query attribute based on wanting `COOP` and `COEP`. Will be a noop when `crossOriginIsolated`\n\t * isn't enabled the current context\n\t */\n\texport function addSearchParam(urlOrSearch: URLSearchParams | Record<string, string>, coop: boolean, coep: boolean): void {\n\t\tif (!(<any>globalThis).crossOriginIsolated) {\n\t\t\t// depends on the current context being COI\n\t\t\treturn;\n\t\t}\n\t\tconst value = coop && coep ? '3' : coep ? '2' : '1';\n\t\tif (urlOrSearch instanceof URLSearchParams) {\n\t\t\turlOrSearch.set(coiSearchParamName, value);\n\t\t} else {\n\t\t\t(<Record<string, string>>urlOrSearch)[coiSearchParamName] = value;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as extpath from 'vs/base/common/extpath';\nimport { Schemas } from 'vs/base/common/network';\nimport * as paths from 'vs/base/common/path';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { compare as strCompare, equalsIgnoreCase } from 'vs/base/common/strings';\nimport { URI, uriToFsPath } from 'vs/base/common/uri';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n//#region IExtUri\n\nexport interface IExtUri {\n\n\t// --- identity\n\n\t/**\n\t * Compares two uris.\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tcompare(uri1: URI, uri2: URI, ignoreFragment?: boolean): number;\n\n\t/**\n\t * Tests whether two uris are equal\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n\t *\n\t * @param base A uri which is \"longer\" or at least same length as `parentCandidate`\n\t * @param parentCandidate A uri which is \"shorter\" or up to same length as `base`\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n\t * @see {@link ResourceMap}\n\t * @param uri Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tgetComparisonKey(uri: URI, ignoreFragment?: boolean): string;\n\n\t/**\n\t * Whether the casing of the path-component of the uri should be ignored.\n\t */\n\tignorePathCasing(uri: URI): boolean;\n\n\t// --- path math\n\n\tbasenameOrAuthority(resource: URI): string;\n\n\t/**\n\t * Returns the basename of the path component of an uri.\n\t * @param resource\n\t */\n\tbasename(resource: URI): string;\n\n\t/**\n\t * Returns the extension of the path component of an uri.\n\t * @param resource\n\t */\n\textname(resource: URI): string;\n\t/**\n\t * Return a URI representing the directory of a URI path.\n\t *\n\t * @param resource The input URI.\n\t * @returns The URI representing the directory of the input URI.\n\t */\n\tdirname(resource: URI): URI;\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param resource The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI;\n\t/**\n\t * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n\t *\n\t * @param resource The URI to normalize the path.\n\t * @returns The URI with the normalized path.\n\t */\n\tnormalizePath(resource: URI): URI;\n\t/**\n\t *\n\t * @param from\n\t * @param to\n\t */\n\trelativePath(from: URI, to: URI): string | undefined;\n\t/**\n\t * Resolves an absolute or relative path against a base URI.\n\t * The path can be relative or absolute posix or a Windows path\n\t */\n\tresolvePath(base: URI, path: string): URI;\n\n\t// --- misc\n\n\t/**\n\t * Returns true if the URI path is absolute.\n\t */\n\tisAbsolutePath(resource: URI): boolean;\n\t/**\n\t * Tests whether the two authorities are the same\n\t */\n\tisEqualAuthority(a1: string, a2: string): boolean;\n\t/**\n\t * Returns true if the URI path has a trailing path separator\n\t */\n\thasTrailingPathSeparator(resource: URI, sep?: string): boolean;\n\t/**\n\t * Removes a trailing path separator, if there's one.\n\t * Important: Doesn't remove the first slash, it would make the URI invalid\n\t */\n\tremoveTrailingPathSeparator(resource: URI, sep?: string): URI;\n\t/**\n\t * Adds a trailing path separator to the URI if there isn't one already.\n\t * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n\t */\n\taddTrailingPathSeparator(resource: URI, sep?: string): URI;\n}\n\nexport class ExtUri implements IExtUri {\n\n\tconstructor(private _ignorePathCasing: (uri: URI) => boolean) { }\n\n\tcompare(uri1: URI, uri2: URI, ignoreFragment: boolean = false): number {\n\t\tif (uri1 === uri2) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n\t}\n\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment: boolean = false): boolean {\n\t\tif (uri1 === uri2) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!uri1 || !uri2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n\t}\n\n\tgetComparisonKey(uri: URI, ignoreFragment: boolean = false): string {\n\t\treturn uri.with({\n\t\t\tpath: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n\t\t\tfragment: ignoreFragment ? null : undefined\n\t\t}).toString();\n\t}\n\n\tignorePathCasing(uri: URI): boolean {\n\t\treturn this._ignorePathCasing(uri);\n\t}\n\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment: boolean = false): boolean {\n\t\tif (base.scheme === parentCandidate.scheme) {\n\t\t\tif (base.scheme === Schemas.file) {\n\t\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// --- path math\n\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI {\n\t\treturn URI.joinPath(resource, ...pathFragment);\n\t}\n\n\tbasenameOrAuthority(resource: URI): string {\n\t\treturn basename(resource) || resource.authority;\n\t}\n\n\tbasename(resource: URI): string {\n\t\treturn paths.posix.basename(resource.path);\n\t}\n\n\textname(resource: URI): string {\n\t\treturn paths.posix.extname(resource.path);\n\t}\n\n\tdirname(resource: URI): URI {\n\t\tif (resource.path.length === 0) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet dirname;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tdirname = paths.posix.dirname(resource.path);\n\t\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t\t}\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: dirname\n\t\t});\n\t}\n\n\tnormalizePath(resource: URI): URI {\n\t\tif (!resource.path.length) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet normalizedPath: string;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: normalizedPath\n\t\t});\n\t}\n\n\trelativePath(from: URI, to: URI): string | undefined {\n\t\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (from.scheme === Schemas.file) {\n\t\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t\t}\n\t\tlet fromPath = from.path || '/';\n\t\tconst toPath = to.path || '/';\n\t\tif (this._ignorePathCasing(from)) {\n\t\t\t// make casing of fromPath match toPath\n\t\t\tlet i = 0;\n\t\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t\t}\n\t\treturn paths.posix.relative(fromPath, toPath);\n\t}\n\n\tresolvePath(base: URI, path: string): URI {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\t\treturn base.with({\n\t\t\t\tauthority: newURI.authority,\n\t\t\t\tpath: newURI.path\n\t\t\t});\n\t\t}\n\t\tpath = extpath.toPosixPath(path); // we allow path to be a windows path\n\t\treturn base.with({\n\t\t\tpath: paths.posix.resolve(base.path, path)\n\t\t});\n\t}\n\n\t// --- misc\n\n\tisAbsolutePath(resource: URI): boolean {\n\t\treturn !!resource.path && resource.path[0] === '/';\n\t}\n\n\tisEqualAuthority(a1: string | undefined, a2: string | undefined) {\n\t\treturn a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n\t}\n\n\thasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t\t} else {\n\t\t\tconst p = resource.path;\n\t\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t\t}\n\t}\n\n\tremoveTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\t\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t\t}\n\t\treturn resource;\n\t}\n\n\taddTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\tlet isRootSep: boolean = false;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t\t} else {\n\t\t\tsep = '/';\n\t\t\tconst p = resource.path;\n\t\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t\t}\n\t\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path + '/' });\n\t\t}\n\t\treturn resource;\n\t}\n}\n\n\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn uri.scheme === Schemas.file ? !isLinux : true;\n});\n\n\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\n\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n\n//#endregion\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined, localScheme: string): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: localScheme, authority, path });\n\t}\n\n\treturn resource.with({ scheme: localScheme });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createTrustedTypesPolicy } from 'vs/base/browser/trustedTypes';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { COI } from 'vs/base/common/network';\nimport { IWorker, IWorkerCallback, IWorkerFactory, logOnceWebWorkerWarning } from 'vs/base/common/worker/simpleWorker';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\n\nconst ttPolicy = createTrustedTypesPolicy('defaultWorkerFactory', { createScriptURL: value => value });\n\nexport function createBlobWorker(blobUrl: string, options?: WorkerOptions): Worker {\n\tif (!blobUrl.startsWith('blob:')) {\n\t\tthrow new URIError('Not a blob-url: ' + blobUrl);\n\t}\n\treturn new Worker(ttPolicy ? ttPolicy.createScriptURL(blobUrl) as unknown as string : blobUrl, options);\n}\n\nfunction getWorker(label: string): Worker | Promise<Worker> {\n\t// Option for hosts to overwrite the worker script (used in the standalone editor)\n\tinterface IMonacoEnvironment {\n\t\tgetWorker?(moduleId: string, label: string): Worker | Promise<Worker>;\n\t\tgetWorkerUrl?(moduleId: string, label: string): string;\n\t}\n\tconst monacoEnvironment: IMonacoEnvironment | undefined = (globalThis as any).MonacoEnvironment;\n\tif (monacoEnvironment) {\n\t\tif (typeof monacoEnvironment.getWorker === 'function') {\n\t\t\treturn monacoEnvironment.getWorker('workerMain.js', label);\n\t\t}\n\t\tif (typeof monacoEnvironment.getWorkerUrl === 'function') {\n\t\t\tconst workerUrl = monacoEnvironment.getWorkerUrl('workerMain.js', label);\n\t\t\treturn new Worker(ttPolicy ? ttPolicy.createScriptURL(workerUrl) as unknown as string : workerUrl, { name: label });\n\t\t}\n\t}\n\t// ESM-comment-begin\n\tif (typeof require === 'function') {\n\t\t// check if the JS lives on a different origin\n\t\tconst workerMain = require.toUrl('vs/base/worker/workerMain.js'); // explicitly using require.toUrl(), see https://github.com/microsoft/vscode/issues/107440#issuecomment-698982321\n\t\tconst workerUrl = getWorkerBootstrapUrl(workerMain, label);\n\t\treturn new Worker(ttPolicy ? ttPolicy.createScriptURL(workerUrl) as unknown as string : workerUrl, { name: label });\n\t}\n\t// ESM-comment-end\n\tthrow new Error(`You must define a function MonacoEnvironment.getWorkerUrl or MonacoEnvironment.getWorker`);\n}\n\n// ESM-comment-begin\nexport function getWorkerBootstrapUrl(scriptPath: string, label: string): string {\n\tif (/^((http:)|(https:)|(file:))/.test(scriptPath) && scriptPath.substring(0, globalThis.origin.length) !== globalThis.origin) {\n\t\t// this is the cross-origin case\n\t\t// i.e. the webpage is running at a different origin than where the scripts are loaded from\n\t\tconst myPath = 'vs/base/worker/defaultWorkerFactory.js';\n\t\tconst workerBaseUrl = require.toUrl(myPath).slice(0, -myPath.length); // explicitly using require.toUrl(), see https://github.com/microsoft/vscode/issues/107440#issuecomment-698982321\n\t\tconst js = `/*${label}*/globalThis.MonacoEnvironment={baseUrl: '${workerBaseUrl}'};const ttPolicy = globalThis.trustedTypes?.createPolicy('defaultWorkerFactory', { createScriptURL: value => value });importScripts(ttPolicy?.createScriptURL('${scriptPath}') ?? '${scriptPath}');/*${label}*/`;\n\t\tconst blob = new Blob([js], { type: 'application/javascript' });\n\t\treturn URL.createObjectURL(blob);\n\t}\n\n\tconst start = scriptPath.lastIndexOf('?');\n\tconst end = scriptPath.lastIndexOf('#', start);\n\tconst params = start > 0\n\t\t? new URLSearchParams(scriptPath.substring(start + 1, ~end ? end : undefined))\n\t\t: new URLSearchParams();\n\n\tCOI.addSearchParam(params, true, true);\n\tconst search = params.toString();\n\n\tif (!search) {\n\t\treturn `${scriptPath}#${label}`;\n\t} else {\n\t\treturn `${scriptPath}?${params.toString()}#${label}`;\n\t}\n}\n// ESM-comment-end\n\nfunction isPromiseLike<T>(obj: any): obj is PromiseLike<T> {\n\tif (typeof obj.then === 'function') {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * A worker that uses HTML5 web workers so that is has\n * its own global scope and its own thread.\n */\nclass WebWorker extends Disposable implements IWorker {\n\n\tprivate readonly id: number;\n\tprivate readonly label: string;\n\tprivate worker: Promise<Worker> | null;\n\n\tconstructor(moduleId: string, id: number, label: string, onMessageCallback: IWorkerCallback, onErrorCallback: (err: any) => void) {\n\t\tsuper();\n\t\tthis.id = id;\n\t\tthis.label = label;\n\t\tconst workerOrPromise = getWorker(label);\n\t\tif (isPromiseLike(workerOrPromise)) {\n\t\t\tthis.worker = workerOrPromise;\n\t\t} else {\n\t\t\tthis.worker = Promise.resolve(workerOrPromise);\n\t\t}\n\t\tthis.postMessage(moduleId, []);\n\t\tthis.worker.then((w) => {\n\t\t\tw.onmessage = function (ev) {\n\t\t\t\tonMessageCallback(ev.data);\n\t\t\t};\n\t\t\tw.onmessageerror = onErrorCallback;\n\t\t\tif (typeof w.addEventListener === 'function') {\n\t\t\t\tw.addEventListener('error', onErrorCallback);\n\t\t\t}\n\t\t});\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.worker?.then(w => {\n\t\t\t\tw.onmessage = null;\n\t\t\t\tw.onmessageerror = null;\n\t\t\t\tw.removeEventListener('error', onErrorCallback);\n\t\t\t\tw.terminate();\n\t\t\t});\n\t\t\tthis.worker = null;\n\t\t}));\n\t}\n\n\tpublic getId(): number {\n\t\treturn this.id;\n\t}\n\n\tpublic postMessage(message: any, transfer: Transferable[]): void {\n\t\tthis.worker?.then(w => {\n\t\t\ttry {\n\t\t\t\tw.postMessage(message, transfer);\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t\tonUnexpectedError(new Error(`FAILED to post message to '${this.label}'-worker`, { cause: err }));\n\t\t\t}\n\t\t});\n\t}\n\n\n}\n\nexport class DefaultWorkerFactory implements IWorkerFactory {\n\n\tprivate static LAST_WORKER_ID = 0;\n\n\tprivate _label: string | undefined;\n\tprivate _webWorkerFailedBeforeError: any;\n\n\tconstructor(label: string | undefined) {\n\t\tthis._label = label;\n\t\tthis._webWorkerFailedBeforeError = false;\n\t}\n\n\tpublic create(moduleId: string, onMessageCallback: IWorkerCallback, onErrorCallback: (err: any) => void): IWorker {\n\t\tconst workerId = (++DefaultWorkerFactory.LAST_WORKER_ID);\n\n\t\tif (this._webWorkerFailedBeforeError) {\n\t\t\tthrow this._webWorkerFailedBeforeError;\n\t\t}\n\n\t\treturn new WebWorker(moduleId, workerId, this._label || 'anonymous' + workerId, onMessageCallback, (err) => {\n\t\t\tlogOnceWebWorkerWarning(err);\n\t\t\tthis._webWorkerFailedBeforeError = err;\n\t\t\tonErrorCallback(err);\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport * as types from 'vs/base/common/types';\nimport * as nls from 'vs/nls';\nimport { IAction } from 'vs/base/common/actions';\n\nfunction exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (verbose && (exception.stack || exception.stacktrace)) {\n\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), stackToString(exception.stack) || stackToString(exception.stacktrace));\n\t}\n\n\treturn detectSystemErrorMessage(exception);\n}\n\nfunction stackToString(stack: string[] | string | undefined): string | undefined {\n\tif (Array.isArray(stack)) {\n\t\treturn stack.join('\\n');\n\t}\n\n\treturn stack;\n}\n\nfunction detectSystemErrorMessage(exception: any): string {\n\n\t// Custom node.js error from us\n\tif (exception.code === 'ERR_UNC_HOST_NOT_ALLOWED') {\n\t\treturn `${exception.message}. Please update the 'security.allowedUNCHosts' setting if you want to allow this host.`;\n\t}\n\n\t// See https://nodejs.org/api/errors.html#errors_class_system_error\n\tif (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n\t\treturn nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\n\t}\n\n\treturn exception.message || nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n *\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tconst errors: any[] = arrays.coalesce(error);\n\t\tconst msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (error.detail) {\n\t\tconst detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\treturn exceptionToErrorMessage(detail.error, verbose);\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\treturn exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n\nexport interface IErrorWithActions extends Error {\n\tactions: IAction[];\n}\n\nexport function isErrorWithActions(obj: unknown): obj is IErrorWithActions {\n\tconst candidate = obj as IErrorWithActions | undefined;\n\n\treturn candidate instanceof Error && Array.isArray(candidate.actions);\n}\n\nexport function createErrorWithActions(messageOrError: string | Error, actions: IAction[]): IErrorWithActions {\n\tlet error: IErrorWithActions;\n\tif (typeof messageOrError === 'string') {\n\t\terror = new Error(messageOrError) as IErrorWithActions;\n\t} else {\n\t\terror = messageOrError as IErrorWithActions;\n\t}\n\n\terror.actions = actions;\n\n\treturn error;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { illegalState } from 'vs/base/common/errors';\nimport { localize } from 'vs/nls';\n\nexport const enum TokenType {\n\tLParen,\n\tRParen,\n\tNeg,\n\tEq,\n\tNotEq,\n\tLt,\n\tLtEq,\n\tGt,\n\tGtEq,\n\tRegexOp,\n\tRegexStr,\n\tTrue,\n\tFalse,\n\tIn,\n\tNot,\n\tAnd,\n\tOr,\n\tStr,\n\tQuotedStr,\n\tError,\n\tEOF,\n}\n\nexport type Token =\n\t| { type: TokenType.LParen; offset: number }\n\t| { type: TokenType.RParen; offset: number }\n\t| { type: TokenType.Neg; offset: number }\n\t| { type: TokenType.Eq; offset: number; isTripleEq: boolean }\n\t| { type: TokenType.NotEq; offset: number; isTripleEq: boolean }\n\t| { type: TokenType.Lt; offset: number }\n\t| { type: TokenType.LtEq; offset: number }\n\t| { type: TokenType.Gt; offset: number }\n\t| { type: TokenType.GtEq; offset: number }\n\t| { type: TokenType.RegexOp; offset: number }\n\t| { type: TokenType.RegexStr; offset: number; lexeme: string }\n\t| { type: TokenType.True; offset: number }\n\t| { type: TokenType.False; offset: number }\n\t| { type: TokenType.In; offset: number }\n\t| { type: TokenType.Not; offset: number }\n\t| { type: TokenType.And; offset: number }\n\t| { type: TokenType.Or; offset: number }\n\t| { type: TokenType.Str; offset: number; lexeme: string }\n\t| { type: TokenType.QuotedStr; offset: number; lexeme: string }\n\t| { type: TokenType.Error; offset: number; lexeme: string }\n\t| { type: TokenType.EOF; offset: number };\n\ntype KeywordTokenType = TokenType.Not | TokenType.In | TokenType.False | TokenType.True;\ntype TokenTypeWithoutLexeme =\n\tTokenType.LParen |\n\tTokenType.RParen |\n\tTokenType.Neg |\n\tTokenType.Lt |\n\tTokenType.LtEq |\n\tTokenType.Gt |\n\tTokenType.GtEq |\n\tTokenType.RegexOp |\n\tTokenType.True |\n\tTokenType.False |\n\tTokenType.In |\n\tTokenType.Not |\n\tTokenType.And |\n\tTokenType.Or |\n\tTokenType.EOF;\n\n/**\n * Example:\n * `foo == bar'` - note how single quote doesn't have a corresponding closing quote,\n * so it's reported as unexpected\n */\nexport type LexingError = {\n\toffset: number; /** note that this doesn't take into account escape characters from the original encoding of the string, e.g., within an extension manifest file's JSON encoding  */\n\tlexeme: string;\n\tadditionalInfo?: string;\n};\n\nfunction hintDidYouMean(...meant: string[]) {\n\tswitch (meant.length) {\n\t\tcase 1:\n\t\t\treturn localize('contextkey.scanner.hint.didYouMean1', \"Did you mean {0}?\", meant[0]);\n\t\tcase 2:\n\t\t\treturn localize('contextkey.scanner.hint.didYouMean2', \"Did you mean {0} or {1}?\", meant[0], meant[1]);\n\t\tcase 3:\n\t\t\treturn localize('contextkey.scanner.hint.didYouMean3', \"Did you mean {0}, {1} or {2}?\", meant[0], meant[1], meant[2]);\n\t\tdefault: // we just don't expect that many\n\t\t\treturn undefined;\n\t}\n}\n\nconst hintDidYouForgetToOpenOrCloseQuote = localize('contextkey.scanner.hint.didYouForgetToOpenOrCloseQuote', \"Did you forget to open or close the quote?\");\nconst hintDidYouForgetToEscapeSlash = localize('contextkey.scanner.hint.didYouForgetToEscapeSlash', \"Did you forget to escape the '/' (slash) character? Put two backslashes before it to escape, e.g., '\\\\\\\\/\\'.\");\n\n/**\n * A simple scanner for context keys.\n *\n * Example:\n *\n * ```ts\n * const scanner = new Scanner().reset('resourceFileName =~ /docker/ && !config.docker.enabled');\n * const tokens = [...scanner];\n * if (scanner.errorTokens.length > 0) {\n *     scanner.errorTokens.forEach(err => console.error(`Unexpected token at ${err.offset}: ${err.lexeme}\\nHint: ${err.additional}`));\n * } else {\n *     // process tokens\n * }\n * ```\n */\nexport class Scanner {\n\n\tstatic getLexeme(token: Token): string {\n\t\tswitch (token.type) {\n\t\t\tcase TokenType.LParen:\n\t\t\t\treturn '(';\n\t\t\tcase TokenType.RParen:\n\t\t\t\treturn ')';\n\t\t\tcase TokenType.Neg:\n\t\t\t\treturn '!';\n\t\t\tcase TokenType.Eq:\n\t\t\t\treturn token.isTripleEq ? '===' : '==';\n\t\t\tcase TokenType.NotEq:\n\t\t\t\treturn token.isTripleEq ? '!==' : '!=';\n\t\t\tcase TokenType.Lt:\n\t\t\t\treturn '<';\n\t\t\tcase TokenType.LtEq:\n\t\t\t\treturn '<=';\n\t\t\tcase TokenType.Gt:\n\t\t\t\treturn '>=';\n\t\t\tcase TokenType.GtEq:\n\t\t\t\treturn '>=';\n\t\t\tcase TokenType.RegexOp:\n\t\t\t\treturn '=~';\n\t\t\tcase TokenType.RegexStr:\n\t\t\t\treturn token.lexeme;\n\t\t\tcase TokenType.True:\n\t\t\t\treturn 'true';\n\t\t\tcase TokenType.False:\n\t\t\t\treturn 'false';\n\t\t\tcase TokenType.In:\n\t\t\t\treturn 'in';\n\t\t\tcase TokenType.Not:\n\t\t\t\treturn 'not';\n\t\t\tcase TokenType.And:\n\t\t\t\treturn '&&';\n\t\t\tcase TokenType.Or:\n\t\t\t\treturn '||';\n\t\t\tcase TokenType.Str:\n\t\t\t\treturn token.lexeme;\n\t\t\tcase TokenType.QuotedStr:\n\t\t\t\treturn token.lexeme;\n\t\t\tcase TokenType.Error:\n\t\t\t\treturn token.lexeme;\n\t\t\tcase TokenType.EOF:\n\t\t\t\treturn 'EOF';\n\t\t\tdefault:\n\t\t\t\tthrow illegalState(`unhandled token type: ${JSON.stringify(token)}; have you forgotten to add a case?`);\n\t\t}\n\t}\n\n\tprivate static _regexFlags = new Set(['i', 'g', 's', 'm', 'y', 'u'].map(ch => ch.charCodeAt(0)));\n\n\tprivate static _keywords = new Map<string, KeywordTokenType>([\n\t\t['not', TokenType.Not],\n\t\t['in', TokenType.In],\n\t\t['false', TokenType.False],\n\t\t['true', TokenType.True],\n\t]);\n\n\tprivate _input: string = '';\n\tprivate _start: number = 0;\n\tprivate _current: number = 0;\n\tprivate _tokens: Token[] = [];\n\tprivate _errors: LexingError[] = [];\n\n\tget errors(): Readonly<LexingError[]> {\n\t\treturn this._errors;\n\t}\n\n\treset(value: string) {\n\t\tthis._input = value;\n\n\t\tthis._start = 0;\n\t\tthis._current = 0;\n\t\tthis._tokens = [];\n\t\tthis._errors = [];\n\n\t\treturn this;\n\t}\n\n\tscan() {\n\t\twhile (!this._isAtEnd()) {\n\n\t\t\tthis._start = this._current;\n\n\t\t\tconst ch = this._advance();\n\t\t\tswitch (ch) {\n\t\t\t\tcase CharCode.OpenParen: this._addToken(TokenType.LParen); break;\n\t\t\t\tcase CharCode.CloseParen: this._addToken(TokenType.RParen); break;\n\n\t\t\t\tcase CharCode.ExclamationMark:\n\t\t\t\t\tif (this._match(CharCode.Equals)) {\n\t\t\t\t\t\tconst isTripleEq = this._match(CharCode.Equals); // eat last `=` if `!==`\n\t\t\t\t\t\tthis._tokens.push({ type: TokenType.NotEq, offset: this._start, isTripleEq });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._addToken(TokenType.Neg);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CharCode.SingleQuote: this._quotedString(); break;\n\t\t\t\tcase CharCode.Slash: this._regex(); break;\n\n\t\t\t\tcase CharCode.Equals:\n\t\t\t\t\tif (this._match(CharCode.Equals)) { // support `==`\n\t\t\t\t\t\tconst isTripleEq = this._match(CharCode.Equals); // eat last `=` if `===`\n\t\t\t\t\t\tthis._tokens.push({ type: TokenType.Eq, offset: this._start, isTripleEq });\n\t\t\t\t\t} else if (this._match(CharCode.Tilde)) {\n\t\t\t\t\t\tthis._addToken(TokenType.RegexOp);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._error(hintDidYouMean('==', '=~'));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CharCode.LessThan: this._addToken(this._match(CharCode.Equals) ? TokenType.LtEq : TokenType.Lt); break;\n\n\t\t\t\tcase CharCode.GreaterThan: this._addToken(this._match(CharCode.Equals) ? TokenType.GtEq : TokenType.Gt); break;\n\n\t\t\t\tcase CharCode.Ampersand:\n\t\t\t\t\tif (this._match(CharCode.Ampersand)) {\n\t\t\t\t\t\tthis._addToken(TokenType.And);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._error(hintDidYouMean('&&'));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CharCode.Pipe:\n\t\t\t\t\tif (this._match(CharCode.Pipe)) {\n\t\t\t\t\t\tthis._addToken(TokenType.Or);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._error(hintDidYouMean('||'));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO@ulugbekna: 1) rewrite using a regex 2) reconsider what characters are considered whitespace, including unicode, nbsp, etc.\n\t\t\t\tcase CharCode.Space:\n\t\t\t\tcase CharCode.CarriageReturn:\n\t\t\t\tcase CharCode.Tab:\n\t\t\t\tcase CharCode.LineFeed:\n\t\t\t\tcase CharCode.NoBreakSpace: // &nbsp\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis._string();\n\t\t\t}\n\t\t}\n\n\t\tthis._start = this._current;\n\t\tthis._addToken(TokenType.EOF);\n\n\t\treturn Array.from(this._tokens);\n\t}\n\n\tprivate _match(expected: number): boolean {\n\t\tif (this._isAtEnd()) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._input.charCodeAt(this._current) !== expected) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._current++;\n\t\treturn true;\n\t}\n\n\tprivate _advance(): number {\n\t\treturn this._input.charCodeAt(this._current++);\n\t}\n\n\tprivate _peek(): number {\n\t\treturn this._isAtEnd() ? CharCode.Null : this._input.charCodeAt(this._current);\n\t}\n\n\tprivate _addToken(type: TokenTypeWithoutLexeme) {\n\t\tthis._tokens.push({ type, offset: this._start });\n\t}\n\n\tprivate _error(additional?: string) {\n\t\tconst offset = this._start;\n\t\tconst lexeme = this._input.substring(this._start, this._current);\n\t\tconst errToken: Token = { type: TokenType.Error, offset: this._start, lexeme };\n\t\tthis._errors.push({ offset, lexeme, additionalInfo: additional });\n\t\tthis._tokens.push(errToken);\n\t}\n\n\t// u - unicode, y - sticky // TODO@ulugbekna: we accept double quotes as part of the string rather than as a delimiter (to preserve old parser's behavior)\n\tprivate stringRe = /[a-zA-Z0-9_<>\\-\\./\\\\:\\*\\?\\+\\[\\]\\^,#@;\"%\\$\\p{L}-]+/uy;\n\tprivate _string() {\n\t\tthis.stringRe.lastIndex = this._start;\n\t\tconst match = this.stringRe.exec(this._input);\n\t\tif (match) {\n\t\t\tthis._current = this._start + match[0].length;\n\t\t\tconst lexeme = this._input.substring(this._start, this._current);\n\t\t\tconst keyword = Scanner._keywords.get(lexeme);\n\t\t\tif (keyword) {\n\t\t\t\tthis._addToken(keyword);\n\t\t\t} else {\n\t\t\t\tthis._tokens.push({ type: TokenType.Str, lexeme, offset: this._start });\n\t\t\t}\n\t\t}\n\t}\n\n\t// captures the lexeme without the leading and trailing '\n\tprivate _quotedString() {\n\t\twhile (this._peek() !== CharCode.SingleQuote && !this._isAtEnd()) { // TODO@ulugbekna: add support for escaping ' ?\n\t\t\tthis._advance();\n\t\t}\n\n\t\tif (this._isAtEnd()) {\n\t\t\tthis._error(hintDidYouForgetToOpenOrCloseQuote);\n\t\t\treturn;\n\t\t}\n\n\t\t// consume the closing '\n\t\tthis._advance();\n\n\t\tthis._tokens.push({ type: TokenType.QuotedStr, lexeme: this._input.substring(this._start + 1, this._current - 1), offset: this._start + 1 });\n\t}\n\n\t/*\n\t * Lexing a regex expression: /.../[igsmyu]*\n\t * Based on https://github.com/microsoft/TypeScript/blob/9247ef115e617805983740ba795d7a8164babf89/src/compiler/scanner.ts#L2129-L2181\n\t *\n\t * Note that we want slashes within a regex to be escaped, e.g., /file:\\\\/\\\\/\\\\// should match `file:///`\n\t */\n\tprivate _regex() {\n\t\tlet p = this._current;\n\n\t\tlet inEscape = false;\n\t\tlet inCharacterClass = false;\n\t\twhile (true) {\n\t\t\tif (p >= this._input.length) {\n\t\t\t\tthis._current = p;\n\t\t\t\tthis._error(hintDidYouForgetToEscapeSlash);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst ch = this._input.charCodeAt(p);\n\n\t\t\tif (inEscape) { // parsing an escape character\n\t\t\t\tinEscape = false;\n\t\t\t} else if (ch === CharCode.Slash && !inCharacterClass) { // end of regex\n\t\t\t\tp++;\n\t\t\t\tbreak;\n\t\t\t} else if (ch === CharCode.OpenSquareBracket) {\n\t\t\t\tinCharacterClass = true;\n\t\t\t} else if (ch === CharCode.Backslash) {\n\t\t\t\tinEscape = true;\n\t\t\t} else if (ch === CharCode.CloseSquareBracket) {\n\t\t\t\tinCharacterClass = false;\n\t\t\t}\n\t\t\tp++;\n\t\t}\n\n\t\t// Consume flags // TODO@ulugbekna: use regex instead\n\t\twhile (p < this._input.length && Scanner._regexFlags.has(this._input.charCodeAt(p))) {\n\t\t\tp++;\n\t\t}\n\n\t\tthis._current = p;\n\n\t\tconst lexeme = this._input.substring(this._start, this._current);\n\t\tthis._tokens.push({ type: TokenType.RegexStr, lexeme, offset: this._start });\n\t}\n\n\tprivate _isAtEnd() {\n\t\treturn this._current >= this._input.length;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class SyncDescriptor<T> {\n\n\treadonly ctor: any;\n\treadonly staticArguments: any[];\n\treadonly supportsDelayedInstantiation: boolean;\n\n\tconstructor(ctor: new (...args: any[]) => T, staticArguments: any[] = [], supportsDelayedInstantiation: boolean = false) {\n\t\tthis.ctor = ctor;\n\t\tthis.staticArguments = staticArguments;\n\t\tthis.supportsDelayedInstantiation = supportsDelayedInstantiation;\n\t}\n}\n\nexport interface SyncDescriptor0<T> {\n\treadonly ctor: new () => T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SyncDescriptor } from './descriptors';\nimport { BrandedService, ServiceIdentifier } from './instantiation';\n\nconst _registry: [ServiceIdentifier<any>, SyncDescriptor<any>][] = [];\n\nexport const enum InstantiationType {\n\t/**\n\t * Instantiate this service as soon as a consumer depends on it. _Note_ that this\n\t * is more costly as some upfront work is done that is likely not needed\n\t */\n\tEager = 0,\n\n\t/**\n\t * Instantiate this service as soon as a consumer uses it. This is the _better_\n\t * way of registering a service.\n\t */\n\tDelayed = 1\n}\n\nexport function registerSingleton<T, Services extends BrandedService[]>(id: ServiceIdentifier<T>, ctor: new (...services: Services) => T, supportsDelayedInstantiation: InstantiationType): void;\nexport function registerSingleton<T, Services extends BrandedService[]>(id: ServiceIdentifier<T>, descriptor: SyncDescriptor<any>): void;\nexport function registerSingleton<T, Services extends BrandedService[]>(id: ServiceIdentifier<T>, ctorOrDescriptor: { new(...services: Services): T } | SyncDescriptor<any>, supportsDelayedInstantiation?: boolean | InstantiationType): void {\n\tif (!(ctorOrDescriptor instanceof SyncDescriptor)) {\n\t\tctorOrDescriptor = new SyncDescriptor<T>(ctorOrDescriptor as new (...args: any[]) => T, [], Boolean(supportsDelayedInstantiation));\n\t}\n\n\t_registry.push([id, ctorOrDescriptor]);\n}\n\nexport function getSingletonServiceDescriptors(): [ServiceIdentifier<any>, SyncDescriptor<any>][] {\n\treturn _registry;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport * as descriptors from './descriptors';\nimport { ServiceCollection } from './serviceCollection';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>; index: number }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature<T, Args extends any[] = []> {\n\tnew <Services extends BrandedService[]>(...args: [...Args, ...Services]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\nexport type GetLeadingNonServiceArgs<TArgs extends any[]> =\n\tTArgs extends [] ? []\n\t: TArgs extends [...infer TFirst, BrandedService] ? GetLeadingNonServiceArgs<TFirst>\n\t: TArgs;\n\nexport interface IInstantiationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(ctor: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t * Calls a function with a service accessor.\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherits all current services\n\t * and adds/overwrites the given services.\n\t *\n\t * NOTE that the returned child is `disposable` and should be disposed when not used\n\t * anymore. This will also dispose all the services that this service has created.\n\t */\n\tcreateChild(services: ServiceCollection, store?: DisposableStore): IInstantiationService;\n\n\t/**\n\t * Disposes this instantiation service.\n\t *\n\t * - Will dispose all services that this instantiation service has created.\n\t * - Will dispose all its children but not its parent.\n\t * - Will NOT dispose services-instances that this service has been created with\n\t * - Will NOT dispose consumer-instances this service has created\n\t */\n\tdispose(): void;\n}\n\n\n/**\n * Identifies a service of type `T`.\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\nexport function refineServiceDecorator<T1, T extends T1>(serviceIdentifier: ServiceIdentifier<T1>): ServiceIdentifier<T> {\n\treturn <ServiceIdentifier<T>>serviceIdentifier;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Event } from 'vs/base/common/event';\nimport { isChrome, isEdge, isFirefox, isLinux, isMacintosh, isSafari, isWeb, isWindows } from 'vs/base/common/platform';\nimport { isFalsyOrWhitespace } from 'vs/base/common/strings';\nimport { Scanner, LexingError, Token, TokenType } from 'vs/platform/contextkey/common/scanner';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { localize } from 'vs/nls';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { illegalArgument } from 'vs/base/common/errors';\n\nconst CONSTANT_VALUES = new Map<string, boolean>();\nCONSTANT_VALUES.set('false', false);\nCONSTANT_VALUES.set('true', true);\nCONSTANT_VALUES.set('isMac', isMacintosh);\nCONSTANT_VALUES.set('isLinux', isLinux);\nCONSTANT_VALUES.set('isWindows', isWindows);\nCONSTANT_VALUES.set('isWeb', isWeb);\nCONSTANT_VALUES.set('isMacNative', isMacintosh && !isWeb);\nCONSTANT_VALUES.set('isEdge', isEdge);\nCONSTANT_VALUES.set('isFirefox', isFirefox);\nCONSTANT_VALUES.set('isChrome', isChrome);\nCONSTANT_VALUES.set('isSafari', isSafari);\n\n/** allow register constant context keys that are known only after startup; requires running `substituteConstants` on the context key - https://github.com/microsoft/vscode/issues/174218#issuecomment-1437972127 */\nexport function setConstant(key: string, value: boolean) {\n\tif (CONSTANT_VALUES.get(key) !== undefined) { throw illegalArgument('contextkey.setConstant(k, v) invoked with already set constant `k`'); }\n\n\tCONSTANT_VALUES.set(key, value);\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport const enum ContextKeyExprType {\n\tFalse = 0,\n\tTrue = 1,\n\tDefined = 2,\n\tNot = 3,\n\tEquals = 4,\n\tNotEquals = 5,\n\tAnd = 6,\n\tRegex = 7,\n\tNotRegex = 8,\n\tOr = 9,\n\tIn = 10,\n\tNotIn = 11,\n\tGreater = 12,\n\tGreaterEquals = 13,\n\tSmaller = 14,\n\tSmallerEquals = 15,\n}\n\nexport interface IContextKeyExprMapper {\n\tmapDefined(key: string): ContextKeyExpression;\n\tmapNot(key: string): ContextKeyExpression;\n\tmapEquals(key: string, value: any): ContextKeyExpression;\n\tmapNotEquals(key: string, value: any): ContextKeyExpression;\n\tmapGreater(key: string, value: any): ContextKeyExpression;\n\tmapGreaterEquals(key: string, value: any): ContextKeyExpression;\n\tmapSmaller(key: string, value: any): ContextKeyExpression;\n\tmapSmallerEquals(key: string, value: any): ContextKeyExpression;\n\tmapRegex(key: string, regexp: RegExp | null): ContextKeyRegexExpr;\n\tmapIn(key: string, valueKey: string): ContextKeyInExpr;\n\tmapNotIn(key: string, valueKey: string): ContextKeyNotInExpr;\n}\n\nexport interface IContextKeyExpression {\n\tcmp(other: ContextKeyExpression): number;\n\tequals(other: ContextKeyExpression): boolean;\n\tsubstituteConstants(): ContextKeyExpression | undefined;\n\tevaluate(context: IContext): boolean;\n\tserialize(): string;\n\tkeys(): string[];\n\tmap(mapFnc: IContextKeyExprMapper): ContextKeyExpression;\n\tnegate(): ContextKeyExpression;\n\n}\n\nexport type ContextKeyExpression = (\n\tContextKeyFalseExpr | ContextKeyTrueExpr | ContextKeyDefinedExpr | ContextKeyNotExpr\n\t| ContextKeyEqualsExpr | ContextKeyNotEqualsExpr | ContextKeyRegexExpr\n\t| ContextKeyNotRegexExpr | ContextKeyAndExpr | ContextKeyOrExpr | ContextKeyInExpr\n\t| ContextKeyNotInExpr | ContextKeyGreaterExpr | ContextKeyGreaterEqualsExpr\n\t| ContextKeySmallerExpr | ContextKeySmallerEqualsExpr\n);\n\n\n/*\n\nSyntax grammar:\n\n```ebnf\n\nexpression ::= or\n\nor ::= and { '||' and }*\n\nand ::= term { '&&' term }*\n\nterm ::=\n\t| '!' (KEY | true | false | parenthesized)\n\t| primary\n\nprimary ::=\n\t| 'true'\n\t| 'false'\n\t| parenthesized\n\t| KEY '=~' REGEX\n\t| KEY [ ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'not' 'in' | 'in') value ]\n\nparenthesized ::=\n\t| '(' expression ')'\n\nvalue ::=\n\t| 'true'\n\t| 'false'\n\t| 'in'      \t// we support `in` as a value because there's an extension that uses it, ie \"when\": \"languageId == in\"\n\t| VALUE \t\t// matched by the same regex as KEY; consider putting the value in single quotes if it's a string (e.g., with spaces)\n\t| SINGLE_QUOTED_STR\n\t| EMPTY_STR  \t// this allows \"when\": \"foo == \" which's used by existing extensions\n\n```\n*/\n\nexport type ParserConfig = {\n\t/**\n\t * with this option enabled, the parser can recover from regex parsing errors, e.g., unescaped slashes: `/src//` is accepted as `/src\\//` would be\n\t */\n\tregexParsingWithErrorRecovery: boolean;\n};\n\nconst defaultConfig: ParserConfig = {\n\tregexParsingWithErrorRecovery: true\n};\n\nexport type ParsingError = {\n\tmessage: string;\n\toffset: number;\n\tlexeme: string;\n\tadditionalInfo?: string;\n};\n\nconst errorEmptyString = localize('contextkey.parser.error.emptyString', \"Empty context key expression\");\nconst hintEmptyString = localize('contextkey.parser.error.emptyString.hint', \"Did you forget to write an expression? You can also put 'false' or 'true' to always evaluate to false or true, respectively.\");\nconst errorNoInAfterNot = localize('contextkey.parser.error.noInAfterNot', \"'in' after 'not'.\");\nconst errorClosingParenthesis = localize('contextkey.parser.error.closingParenthesis', \"closing parenthesis ')'\");\nconst errorUnexpectedToken = localize('contextkey.parser.error.unexpectedToken', \"Unexpected token\");\nconst hintUnexpectedToken = localize('contextkey.parser.error.unexpectedToken.hint', \"Did you forget to put && or || before the token?\");\nconst errorUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF', \"Unexpected end of expression\");\nconst hintUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF.hint', \"Did you forget to put a context key?\");\n\n/**\n * A parser for context key expressions.\n *\n * Example:\n * ```ts\n * const parser = new Parser();\n * const expr = parser.parse('foo == \"bar\" && baz == true');\n *\n * if (expr === undefined) {\n * \t// there were lexing or parsing errors\n * \t// process lexing errors with `parser.lexingErrors`\n *  // process parsing errors with `parser.parsingErrors`\n * } else {\n * \t// expr is a valid expression\n * }\n * ```\n */\nexport class Parser {\n\t// Note: this doesn't produce an exact syntax tree but a normalized one\n\t// ContextKeyExpression's that we use as AST nodes do not expose constructors that do not normalize\n\n\tprivate static _parseError = new Error();\n\n\t// lifetime note: `_scanner` lives as long as the parser does, i.e., is not reset between calls to `parse`\n\tprivate readonly _scanner = new Scanner();\n\n\t// lifetime note: `_tokens`, `_current`, and `_parsingErrors` must be reset between calls to `parse`\n\tprivate _tokens: Token[] = [];\n\tprivate _current = 0; \t\t\t\t\t// invariant: 0 <= this._current < this._tokens.length ; any incrementation of this value must first call `_isAtEnd`\n\tprivate _parsingErrors: ParsingError[] = [];\n\n\tget lexingErrors(): Readonly<LexingError[]> {\n\t\treturn this._scanner.errors;\n\t}\n\n\tget parsingErrors(): Readonly<ParsingError[]> {\n\t\treturn this._parsingErrors;\n\t}\n\n\tconstructor(private readonly _config: ParserConfig = defaultConfig) {\n\t}\n\n\t/**\n\t * Parse a context key expression.\n\t *\n\t * @param input the expression to parse\n\t * @returns the parsed expression or `undefined` if there's an error - call `lexingErrors` and `parsingErrors` to see the errors\n\t */\n\tparse(input: string): ContextKeyExpression | undefined {\n\n\t\tif (input === '') {\n\t\t\tthis._parsingErrors.push({ message: errorEmptyString, offset: 0, lexeme: '', additionalInfo: hintEmptyString });\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis._tokens = this._scanner.reset(input).scan();\n\t\t// @ulugbekna: we do not stop parsing if there are lexing errors to be able to reconstruct regexes with unescaped slashes; TODO@ulugbekna: make this respect config option for recovery\n\n\t\tthis._current = 0;\n\t\tthis._parsingErrors = [];\n\n\t\ttry {\n\t\t\tconst expr = this._expr();\n\t\t\tif (!this._isAtEnd()) {\n\t\t\t\tconst peek = this._peek();\n\t\t\t\tconst additionalInfo = peek.type === TokenType.Str ? hintUnexpectedToken : undefined;\n\t\t\t\tthis._parsingErrors.push({ message: errorUnexpectedToken, offset: peek.offset, lexeme: Scanner.getLexeme(peek), additionalInfo });\n\t\t\t\tthrow Parser._parseError;\n\t\t\t}\n\t\t\treturn expr;\n\t\t} catch (e) {\n\t\t\tif (!(e === Parser._parseError)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tprivate _expr(): ContextKeyExpression | undefined {\n\t\treturn this._or();\n\t}\n\n\tprivate _or(): ContextKeyExpression | undefined {\n\t\tconst expr = [this._and()];\n\n\t\twhile (this._matchOne(TokenType.Or)) {\n\t\t\tconst right = this._and();\n\t\t\texpr.push(right);\n\t\t}\n\n\t\treturn expr.length === 1 ? expr[0] : ContextKeyExpr.or(...expr);\n\t}\n\n\tprivate _and(): ContextKeyExpression | undefined {\n\t\tconst expr = [this._term()];\n\n\t\twhile (this._matchOne(TokenType.And)) {\n\t\t\tconst right = this._term();\n\t\t\texpr.push(right);\n\t\t}\n\n\t\treturn expr.length === 1 ? expr[0] : ContextKeyExpr.and(...expr);\n\t}\n\n\tprivate _term(): ContextKeyExpression | undefined {\n\t\tif (this._matchOne(TokenType.Neg)) {\n\t\t\tconst peek = this._peek();\n\t\t\tswitch (peek.type) {\n\t\t\t\tcase TokenType.True:\n\t\t\t\t\tthis._advance();\n\t\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t\tcase TokenType.False:\n\t\t\t\t\tthis._advance();\n\t\t\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t\t\tcase TokenType.LParen: {\n\t\t\t\t\tthis._advance();\n\t\t\t\t\tconst expr = this._expr();\n\t\t\t\t\tthis._consume(TokenType.RParen, errorClosingParenthesis);\n\t\t\t\t\treturn expr?.negate();\n\t\t\t\t}\n\t\t\t\tcase TokenType.Str:\n\t\t\t\t\tthis._advance();\n\t\t\t\t\treturn ContextKeyNotExpr.create(peek.lexeme);\n\t\t\t\tdefault:\n\t\t\t\t\tthrow this._errExpectedButGot(`KEY | true | false | '(' expression ')'`, peek);\n\t\t\t}\n\t\t}\n\t\treturn this._primary();\n\t}\n\n\tprivate _primary(): ContextKeyExpression | undefined {\n\n\t\tconst peek = this._peek();\n\t\tswitch (peek.type) {\n\t\t\tcase TokenType.True:\n\t\t\t\tthis._advance();\n\t\t\t\treturn ContextKeyExpr.true();\n\n\t\t\tcase TokenType.False:\n\t\t\t\tthis._advance();\n\t\t\t\treturn ContextKeyExpr.false();\n\n\t\t\tcase TokenType.LParen: {\n\t\t\t\tthis._advance();\n\t\t\t\tconst expr = this._expr();\n\t\t\t\tthis._consume(TokenType.RParen, errorClosingParenthesis);\n\t\t\t\treturn expr;\n\t\t\t}\n\n\t\t\tcase TokenType.Str: {\n\t\t\t\t// KEY\n\t\t\t\tconst key = peek.lexeme;\n\t\t\t\tthis._advance();\n\n\t\t\t\t// =~ regex\n\t\t\t\tif (this._matchOne(TokenType.RegexOp)) {\n\n\t\t\t\t\t// @ulugbekna: we need to reconstruct the regex from the tokens because some extensions use unescaped slashes in regexes\n\t\t\t\t\tconst expr = this._peek();\n\n\t\t\t\t\tif (!this._config.regexParsingWithErrorRecovery) {\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\tif (expr.type !== TokenType.RegexStr) {\n\t\t\t\t\t\t\tthrow this._errExpectedButGot(`REGEX`, expr);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst regexLexeme = expr.lexeme;\n\t\t\t\t\t\tconst closingSlashIndex = regexLexeme.lastIndexOf('/');\n\t\t\t\t\t\tconst flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n\t\t\t\t\t\tlet regexp: RegExp | null;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tregexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tthrow this._errExpectedButGot(`REGEX`, expr);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ContextKeyRegexExpr.create(key, regexp);\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (expr.type) {\n\t\t\t\t\t\tcase TokenType.RegexStr:\n\t\t\t\t\t\tcase TokenType.Error: { // also handle an ErrorToken in case of smth such as /(/file)/\n\t\t\t\t\t\t\tconst lexemeReconstruction = [expr.lexeme]; // /REGEX/ or /REGEX/FLAGS\n\t\t\t\t\t\t\tthis._advance();\n\n\t\t\t\t\t\t\tlet followingToken = this._peek();\n\t\t\t\t\t\t\tlet parenBalance = 0;\n\t\t\t\t\t\t\tfor (let i = 0; i < expr.lexeme.length; i++) {\n\t\t\t\t\t\t\t\tif (expr.lexeme.charCodeAt(i) === CharCode.OpenParen) {\n\t\t\t\t\t\t\t\t\tparenBalance++;\n\t\t\t\t\t\t\t\t} else if (expr.lexeme.charCodeAt(i) === CharCode.CloseParen) {\n\t\t\t\t\t\t\t\t\tparenBalance--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\twhile (!this._isAtEnd() && followingToken.type !== TokenType.And && followingToken.type !== TokenType.Or) {\n\t\t\t\t\t\t\t\tswitch (followingToken.type) {\n\t\t\t\t\t\t\t\t\tcase TokenType.LParen:\n\t\t\t\t\t\t\t\t\t\tparenBalance++;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase TokenType.RParen:\n\t\t\t\t\t\t\t\t\t\tparenBalance--;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase TokenType.RegexStr:\n\t\t\t\t\t\t\t\t\tcase TokenType.QuotedStr:\n\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < followingToken.lexeme.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\tif (followingToken.lexeme.charCodeAt(i) === CharCode.OpenParen) {\n\t\t\t\t\t\t\t\t\t\t\t\tparenBalance++;\n\t\t\t\t\t\t\t\t\t\t\t} else if (expr.lexeme.charCodeAt(i) === CharCode.CloseParen) {\n\t\t\t\t\t\t\t\t\t\t\t\tparenBalance--;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (parenBalance < 0) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlexemeReconstruction.push(Scanner.getLexeme(followingToken));\n\t\t\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\t\t\tfollowingToken = this._peek();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst regexLexeme = lexemeReconstruction.join('');\n\t\t\t\t\t\t\tconst closingSlashIndex = regexLexeme.lastIndexOf('/');\n\t\t\t\t\t\t\tconst flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n\t\t\t\t\t\t\tlet regexp: RegExp | null;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tregexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tthrow this._errExpectedButGot(`REGEX`, expr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn ContextKeyExpr.regex(key, regexp);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase TokenType.QuotedStr: {\n\t\t\t\t\t\t\tconst serializedValue = expr.lexeme;\n\t\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\t\t// replicate old regex parsing behavior\n\n\t\t\t\t\t\t\tlet regex: RegExp | null = null;\n\n\t\t\t\t\t\t\tif (!isFalsyOrWhitespace(serializedValue)) {\n\t\t\t\t\t\t\t\tconst start = serializedValue.indexOf('/');\n\t\t\t\t\t\t\t\tconst end = serializedValue.lastIndexOf('/');\n\t\t\t\t\t\t\t\tif (start !== end && start >= 0) {\n\n\t\t\t\t\t\t\t\t\tconst value = serializedValue.slice(start + 1, end);\n\t\t\t\t\t\t\t\t\tconst caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tregex = new RegExp(value, caseIgnoreFlag);\n\t\t\t\t\t\t\t\t\t} catch (_e) {\n\t\t\t\t\t\t\t\t\t\tthrow this._errExpectedButGot(`REGEX`, expr);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (regex === null) {\n\t\t\t\t\t\t\t\tthrow this._errExpectedButGot('REGEX', expr);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ContextKeyRegexExpr.create(key, regex);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow this._errExpectedButGot('REGEX', this._peek());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// [ 'not' 'in' value ]\n\t\t\t\tif (this._matchOne(TokenType.Not)) {\n\t\t\t\t\tthis._consume(TokenType.In, errorNoInAfterNot);\n\t\t\t\t\tconst right = this._value();\n\t\t\t\t\treturn ContextKeyExpr.notIn(key, right);\n\t\t\t\t}\n\n\t\t\t\t// [ ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in') value ]\n\t\t\t\tconst maybeOp = this._peek().type;\n\t\t\t\tswitch (maybeOp) {\n\t\t\t\t\tcase TokenType.Eq: {\n\t\t\t\t\t\tthis._advance();\n\n\t\t\t\t\t\tconst right = this._value();\n\t\t\t\t\t\tif (this._previous().type === TokenType.QuotedStr) { // to preserve old parser behavior: \"foo == 'true'\" is preserved as \"foo == 'true'\", but \"foo == true\" is optimized as \"foo\"\n\t\t\t\t\t\t\treturn ContextKeyExpr.equals(key, right);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tswitch (right) {\n\t\t\t\t\t\t\tcase 'true':\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.has(key);\n\t\t\t\t\t\t\tcase 'false':\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.not(key);\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.equals(key, right);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcase TokenType.NotEq: {\n\t\t\t\t\t\tthis._advance();\n\n\t\t\t\t\t\tconst right = this._value();\n\t\t\t\t\t\tif (this._previous().type === TokenType.QuotedStr) { // same as above with \"foo != 'true'\"\n\t\t\t\t\t\t\treturn ContextKeyExpr.notEquals(key, right);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tswitch (right) {\n\t\t\t\t\t\t\tcase 'true':\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.not(key);\n\t\t\t\t\t\t\tcase 'false':\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.has(key);\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.notEquals(key, right);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// TODO: ContextKeyExpr.smaller(key, right) accepts only `number` as `right` AND during eval of this node, we just eval to `false` if `right` is not a number\n\t\t\t\t\t// consequently, package.json linter should _warn_ the user if they're passing undesired things to ops\n\t\t\t\t\tcase TokenType.Lt:\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\treturn ContextKeySmallerExpr.create(key, this._value());\n\n\t\t\t\t\tcase TokenType.LtEq:\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\treturn ContextKeySmallerEqualsExpr.create(key, this._value());\n\n\t\t\t\t\tcase TokenType.Gt:\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\treturn ContextKeyGreaterExpr.create(key, this._value());\n\n\t\t\t\t\tcase TokenType.GtEq:\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\treturn ContextKeyGreaterEqualsExpr.create(key, this._value());\n\n\t\t\t\t\tcase TokenType.In:\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\treturn ContextKeyExpr.in(key, this._value());\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn ContextKeyExpr.has(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcase TokenType.EOF:\n\t\t\t\tthis._parsingErrors.push({ message: errorUnexpectedEOF, offset: peek.offset, lexeme: '', additionalInfo: hintUnexpectedEOF });\n\t\t\t\tthrow Parser._parseError;\n\n\t\t\tdefault:\n\t\t\t\tthrow this._errExpectedButGot(`true | false | KEY \\n\\t| KEY '=~' REGEX \\n\\t| KEY ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in' | 'not' 'in') value`, this._peek());\n\n\t\t}\n\t}\n\n\tprivate _value(): string {\n\t\tconst token = this._peek();\n\t\tswitch (token.type) {\n\t\t\tcase TokenType.Str:\n\t\t\tcase TokenType.QuotedStr:\n\t\t\t\tthis._advance();\n\t\t\t\treturn token.lexeme;\n\t\t\tcase TokenType.True:\n\t\t\t\tthis._advance();\n\t\t\t\treturn 'true';\n\t\t\tcase TokenType.False:\n\t\t\t\tthis._advance();\n\t\t\t\treturn 'false';\n\t\t\tcase TokenType.In: // we support `in` as a value, e.g., \"when\": \"languageId == in\" - exists in existing extensions\n\t\t\t\tthis._advance();\n\t\t\t\treturn 'in';\n\t\t\tdefault:\n\t\t\t\t// this allows \"when\": \"foo == \" which's used by existing extensions\n\t\t\t\t// we do not call `_advance` on purpose - we don't want to eat unintended tokens\n\t\t\t\treturn '';\n\t\t}\n\t}\n\n\tprivate _flagsGYRe = /g|y/g;\n\tprivate _removeFlagsGY(flags: string): string {\n\t\treturn flags.replaceAll(this._flagsGYRe, '');\n\t}\n\n\t// careful: this can throw if current token is the initial one (ie index = 0)\n\tprivate _previous() {\n\t\treturn this._tokens[this._current - 1];\n\t}\n\n\tprivate _matchOne(token: TokenType) {\n\t\tif (this._check(token)) {\n\t\t\tthis._advance();\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate _advance() {\n\t\tif (!this._isAtEnd()) {\n\t\t\tthis._current++;\n\t\t}\n\t\treturn this._previous();\n\t}\n\n\tprivate _consume(type: TokenType, message: string) {\n\t\tif (this._check(type)) {\n\t\t\treturn this._advance();\n\t\t}\n\n\t\tthrow this._errExpectedButGot(message, this._peek());\n\t}\n\n\tprivate _errExpectedButGot(expected: string, got: Token, additionalInfo?: string) {\n\t\tconst message = localize('contextkey.parser.error.expectedButGot', \"Expected: {0}\\nReceived: '{1}'.\", expected, Scanner.getLexeme(got));\n\t\tconst offset = got.offset;\n\t\tconst lexeme = Scanner.getLexeme(got);\n\t\tthis._parsingErrors.push({ message, offset, lexeme, additionalInfo });\n\t\treturn Parser._parseError;\n\t}\n\n\tprivate _check(type: TokenType) {\n\t\treturn this._peek().type === type;\n\t}\n\n\tprivate _peek() {\n\t\treturn this._tokens[this._current];\n\t}\n\n\tprivate _isAtEnd() {\n\t\treturn this._peek().type === TokenType.EOF;\n\t}\n}\n\nexport abstract class ContextKeyExpr {\n\n\tpublic static false(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n\tpublic static true(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n\tpublic static has(key: string): ContextKeyExpression {\n\t\treturn ContextKeyDefinedExpr.create(key);\n\t}\n\tpublic static equals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(key, value);\n\t}\n\tpublic static notEquals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(key, value);\n\t}\n\tpublic static regex(key: string, value: RegExp): ContextKeyExpression {\n\t\treturn ContextKeyRegexExpr.create(key, value);\n\t}\n\tpublic static in(key: string, value: string): ContextKeyExpression {\n\t\treturn ContextKeyInExpr.create(key, value);\n\t}\n\tpublic static notIn(key: string, value: string): ContextKeyExpression {\n\t\treturn ContextKeyNotInExpr.create(key, value);\n\t}\n\tpublic static not(key: string): ContextKeyExpression {\n\t\treturn ContextKeyNotExpr.create(key);\n\t}\n\tpublic static and(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyAndExpr.create(expr, null, true);\n\t}\n\tpublic static or(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyOrExpr.create(expr, null, true);\n\t}\n\tpublic static greater(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeyGreaterExpr.create(key, value);\n\t}\n\tpublic static greaterEquals(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeyGreaterEqualsExpr.create(key, value);\n\t}\n\tpublic static smaller(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeySmallerExpr.create(key, value);\n\t}\n\tpublic static smallerEquals(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeySmallerEqualsExpr.create(key, value);\n\t}\n\n\tprivate static _parser = new Parser({ regexParsingWithErrorRecovery: false });\n\tpublic static deserialize(serialized: string | null | undefined): ContextKeyExpression | undefined {\n\t\tif (serialized === undefined || serialized === null) { // an empty string needs to be handled by the parser to get a corresponding parsing error reported\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst expr = this._parser.parse(serialized);\n\t\treturn expr;\n\t}\n\n}\n\n\nexport function validateWhenClauses(whenClauses: string[]): any {\n\n\tconst parser = new Parser({ regexParsingWithErrorRecovery: false }); // we run with no recovery to guide users to use correct regexes\n\n\treturn whenClauses.map(whenClause => {\n\t\tparser.parse(whenClause);\n\n\t\tif (parser.lexingErrors.length > 0) {\n\t\t\treturn parser.lexingErrors.map((se: LexingError) => ({\n\t\t\t\terrorMessage: se.additionalInfo ?\n\t\t\t\t\tlocalize('contextkey.scanner.errorForLinterWithHint', \"Unexpected token. Hint: {0}\", se.additionalInfo) :\n\t\t\t\t\tlocalize('contextkey.scanner.errorForLinter', \"Unexpected token.\"),\n\t\t\t\toffset: se.offset,\n\t\t\t\tlength: se.lexeme.length,\n\t\t\t}));\n\t\t} else if (parser.parsingErrors.length > 0) {\n\t\t\treturn parser.parsingErrors.map((pe: ParsingError) => ({\n\t\t\t\terrorMessage: pe.additionalInfo ? `${pe.message}. ${pe.additionalInfo}` : pe.message,\n\t\t\t\toffset: pe.offset,\n\t\t\t\tlength: pe.lexeme.length,\n\t\t\t}));\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t});\n}\n\nexport function expressionsAreEqualWithConstantSubstitution(a: ContextKeyExpression | null | undefined, b: ContextKeyExpression | null | undefined): boolean {\n\tconst aExpr = a ? a.substituteConstants() : undefined;\n\tconst bExpr = b ? b.substituteConstants() : undefined;\n\tif (!aExpr && !bExpr) {\n\t\treturn true;\n\t}\n\tif (!aExpr || !bExpr) {\n\t\treturn false;\n\t}\n\treturn aExpr.equals(bExpr);\n}\n\nfunction cmp(a: ContextKeyExpression, b: ContextKeyExpression): number {\n\treturn a.cmp(b);\n}\n\nexport class ContextKeyFalseExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyFalseExpr();\n\n\tpublic readonly type = ContextKeyExprType.False;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn false;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'false';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyTrueExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyTrueExpr();\n\n\tpublic readonly type = ContextKeyExprType.True;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn true;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'true';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyDefinedExpr implements IContextKeyExpression {\n\tpublic static create(key: string, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n\t\t}\n\t\treturn new ContextKeyDefinedExpr(key, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Defined;\n\n\tprotected constructor(\n\t\treadonly key: string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp1(this.key, other.key);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.key;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapDefined(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotExpr.create(this.key, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\treturn (value ? ContextKeyDefinedExpr.create(key, negated) : ContextKeyNotExpr.create(key, negated));\n\t\t}\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst trueValue = constantValue ? 'true' : 'false';\n\t\t\treturn (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyEqualsExpr(key, value, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Equals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: any,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst trueValue = constantValue ? 'true' : 'false';\n\t\t\treturn (this.value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional ==\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) == this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} == '${this.value}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyInExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, valueKey: string): ContextKeyInExpr {\n\t\treturn new ContextKeyInExpr(key, valueKey);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.In;\n\tprivate negated: ContextKeyExpression | null = null;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly valueKey: string,\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.valueKey, other.key, other.valueKey);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.valueKey === other.valueKey);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tconst source = context.getValue(this.valueKey);\n\n\t\tconst item = context.getValue(this.key);\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn source.includes(item as any);\n\t\t}\n\n\t\tif (typeof item === 'string' && typeof source === 'object' && source !== null) {\n\t\t\treturn hasOwnProperty.call(source, item);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} in '${this.valueKey}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key, this.valueKey];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyInExpr {\n\t\treturn mapFnc.mapIn(this.key, this.valueKey);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotInExpr.create(this.key, this.valueKey);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyNotInExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, valueKey: string): ContextKeyNotInExpr {\n\t\treturn new ContextKeyNotInExpr(key, valueKey);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotIn;\n\n\tprivate readonly _negated: ContextKeyInExpr;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly valueKey: string,\n\t) {\n\t\tthis._negated = ContextKeyInExpr.create(key, valueKey);\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn this._negated.cmp(other._negated);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn this._negated.equals(other._negated);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn !this._negated.evaluate(context);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} not in '${this.valueKey}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn this._negated.keys();\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNotIn(this.key, this.valueKey);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn this._negated;\n\t}\n}\n\nexport class ContextKeyNotEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\tif (value) {\n\t\t\t\treturn ContextKeyNotExpr.create(key, negated);\n\t\t\t}\n\t\t\treturn ContextKeyDefinedExpr.create(key, negated);\n\t\t}\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst falseValue = constantValue ? 'true' : 'false';\n\t\t\treturn (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotEqualsExpr(key, value, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: any,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst falseValue = constantValue ? 'true' : 'false';\n\t\t\treturn (this.value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional !=\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) != this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} != '${this.value}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNotEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyNotExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotExpr(key, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Not;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp1(this.key, other.key);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `!${this.key}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNot(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyDefinedExpr.create(this.key, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nfunction withFloatOrStr<T extends ContextKeyExpression>(value: any, callback: (value: number | string) => T): T | ContextKeyFalseExpr {\n\tif (typeof value === 'string') {\n\t\tconst n = parseFloat(value);\n\t\tif (!isNaN(n)) {\n\t\t\tvalue = n;\n\t\t}\n\t}\n\tif (typeof value === 'string' || typeof value === 'number') {\n\t\treturn callback(value);\n\t}\n\treturn ContextKeyFalseExpr.INSTANCE;\n}\n\nexport class ContextKeyGreaterExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeyGreaterExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Greater;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) { }\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) > this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} > ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapGreater(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeySmallerEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyGreaterEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeyGreaterEqualsExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.GreaterEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) { }\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) >= this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} >= ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapGreaterEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeySmallerExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeySmallerExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeySmallerExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Smaller;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) < this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} < ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapSmaller(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyGreaterEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeySmallerEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeySmallerEqualsExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.SmallerEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) <= this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} <= ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapSmallerEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyGreaterExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, regexp: RegExp | null): ContextKeyRegexExpr {\n\t\treturn new ContextKeyRegexExpr(key, regexp);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Regex;\n\tprivate negated: ContextKeyExpression | null = null;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly regexp: RegExp | null\n\t) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\tif (thisSource < otherSource) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (thisSource > otherSource) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\t\treturn (this.key === other.key && thisSource === otherSource);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tconst value = context.getValue<any>(this.key);\n\t\treturn this.regexp ? this.regexp.test(value) : false;\n\t}\n\n\tpublic serialize(): string {\n\t\tconst value = this.regexp\n\t\t\t? `/${this.regexp.source}/${this.regexp.flags}`\n\t\t\t: '/invalid/';\n\t\treturn `${this.key} =~ ${value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyRegexExpr {\n\t\treturn mapFnc.mapRegex(this.key, this.regexp);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotRegexExpr.create(this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyNotRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(actual: ContextKeyRegexExpr): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(actual);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotRegex;\n\n\tprivate constructor(private readonly _actual: ContextKeyRegexExpr) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn this._actual.cmp(other._actual);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn this._actual.equals(other._actual);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn !this._actual.evaluate(context);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `!(${this._actual.serialize()})`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn this._actual.keys();\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(this._actual.map(mapFnc));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn this._actual;\n\t}\n}\n\n/**\n * @returns the same instance if nothing changed.\n */\nfunction eliminateConstantsInArray(arr: ContextKeyExpression[]): (ContextKeyExpression | undefined)[] {\n\t// Allocate array only if there is a difference\n\tlet newArr: (ContextKeyExpression | undefined)[] | null = null;\n\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\tconst newExpr = arr[i].substituteConstants();\n\n\t\tif (arr[i] !== newExpr) {\n\t\t\t// something has changed!\n\n\t\t\t// allocate array on first difference\n\t\t\tif (newArr === null) {\n\t\t\t\tnewArr = [];\n\t\t\t\tfor (let j = 0; j < i; j++) {\n\t\t\t\t\tnewArr[j] = arr[j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (newArr !== null) {\n\t\t\tnewArr[i] = newExpr;\n\t\t}\n\t}\n\n\tif (newArr === null) {\n\t\treturn arr;\n\t}\n\treturn newArr;\n}\n\nexport class ContextKeyAndExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\treturn ContextKeyAndExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.And;\n\n\tprivate constructor(\n\t\tpublic readonly expr: ContextKeyExpression[],\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst exprArr = eliminateConstantsInArray(this.expr);\n\t\tif (exprArr === this.expr) {\n\t\t\t// no change\n\t\t\treturn this;\n\t\t}\n\t\treturn ContextKeyAndExpr.create(exprArr, this.negated, false);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (!this.expr[i].evaluate(context)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\tconst expr: ContextKeyExpression[] = [];\n\t\tlet hasTrue = false;\n\n\t\tfor (const e of arr) {\n\t\t\tif (!e) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t// anything && true ==> anything\n\t\t\t\thasTrue = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t// anything && false ==> false\n\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.And) {\n\t\t\t\texpr.push(...e.expr);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\texpr.push(e);\n\t\t}\n\n\t\tif (expr.length === 0 && hasTrue) {\n\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t}\n\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\texpr.sort(cmp);\n\n\t\t// eliminate duplicate terms\n\t\tfor (let i = 1; i < expr.length; i++) {\n\t\t\tif (expr[i - 1].equals(expr[i])) {\n\t\t\t\texpr.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// We must distribute any OR expression because we don't support parens\n\t\t// OR extensions will be at the end (due to sorting rules)\n\t\twhile (expr.length > 1) {\n\t\t\tconst lastElement = expr[expr.length - 1];\n\t\t\tif (lastElement.type !== ContextKeyExprType.Or) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// pop the last element\n\t\t\texpr.pop();\n\n\t\t\t// pop the second to last element\n\t\t\tconst secondToLastElement = expr.pop()!;\n\n\t\t\tconst isFinished = (expr.length === 0);\n\n\t\t\t// distribute `lastElement` over `secondToLastElement`\n\t\t\tconst resultElement = ContextKeyOrExpr.create(\n\t\t\t\tlastElement.expr.map(el => ContextKeyAndExpr.create([el, secondToLastElement], null, extraRedundantCheck)),\n\t\t\t\tnull,\n\t\t\t\tisFinished\n\t\t\t);\n\n\t\t\tif (resultElement) {\n\t\t\t\texpr.push(resultElement);\n\t\t\t\texpr.sort(cmp);\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// resolve false AND expressions\n\t\tif (extraRedundantCheck) {\n\t\t\tfor (let i = 0; i < expr.length; i++) {\n\t\t\t\tfor (let j = i + 1; j < expr.length; j++) {\n\t\t\t\t\tif (expr[i].negate().equals(expr[j])) {\n\t\t\t\t\t\t// A && !A case\n\t\t\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (expr.length === 1) {\n\t\t\t\treturn expr[0];\n\t\t\t}\n\t\t}\n\n\t\treturn new ContextKeyAndExpr(expr, negated);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' && ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (const expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyAndExpr(this.expr.map(expr => expr.map(mapFnc)), null);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tconst result: ContextKeyExpression[] = [];\n\t\t\tfor (const expr of this.expr) {\n\t\t\t\tresult.push(expr.negate());\n\t\t\t}\n\t\t\tthis.negated = ContextKeyOrExpr.create(result, this, true)!;\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyOrExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\treturn ContextKeyOrExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Or;\n\n\tprivate constructor(\n\t\tpublic readonly expr: ContextKeyExpression[],\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst exprArr = eliminateConstantsInArray(this.expr);\n\t\tif (exprArr === this.expr) {\n\t\t\t// no change\n\t\t\treturn this;\n\t\t}\n\t\treturn ContextKeyOrExpr.create(exprArr, this.negated, false);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (this.expr[i].evaluate(context)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\tlet expr: ContextKeyExpression[] = [];\n\t\tlet hasFalse = false;\n\n\t\tif (arr) {\n\t\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\t\tconst e = arr[i];\n\t\t\t\tif (!e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t\t// anything || false ==> anything\n\t\t\t\t\thasFalse = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t\t// anything || true ==> true\n\t\t\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.Or) {\n\t\t\t\t\texpr = expr.concat(e.expr);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\texpr.push(e);\n\t\t\t}\n\n\t\t\tif (expr.length === 0 && hasFalse) {\n\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t}\n\n\t\t\texpr.sort(cmp);\n\t\t}\n\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// eliminate duplicate terms\n\t\tfor (let i = 1; i < expr.length; i++) {\n\t\t\tif (expr[i - 1].equals(expr[i])) {\n\t\t\t\texpr.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// resolve true OR expressions\n\t\tif (extraRedundantCheck) {\n\t\t\tfor (let i = 0; i < expr.length; i++) {\n\t\t\t\tfor (let j = i + 1; j < expr.length; j++) {\n\t\t\t\t\tif (expr[i].negate().equals(expr[j])) {\n\t\t\t\t\t\t// A || !A case\n\t\t\t\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (expr.length === 1) {\n\t\t\t\treturn expr[0];\n\t\t\t}\n\t\t}\n\n\t\treturn new ContextKeyOrExpr(expr, negated);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' || ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (const expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyOrExpr(this.expr.map(expr => expr.map(mapFnc)), null);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tconst result: ContextKeyExpression[] = [];\n\t\t\tfor (const expr of this.expr) {\n\t\t\t\tresult.push(expr.negate());\n\t\t\t}\n\n\t\t\t// We don't support parens, so here we distribute the AND over the OR terminals\n\t\t\t// We always take the first 2 AND pairs and distribute them\n\t\t\twhile (result.length > 1) {\n\t\t\t\tconst LEFT = result.shift()!;\n\t\t\t\tconst RIGHT = result.shift()!;\n\n\t\t\t\tconst all: ContextKeyExpression[] = [];\n\t\t\t\tfor (const left of getTerminals(LEFT)) {\n\t\t\t\t\tfor (const right of getTerminals(RIGHT)) {\n\t\t\t\t\t\tall.push(ContextKeyAndExpr.create([left, right], null, false)!);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult.unshift(ContextKeyOrExpr.create(all, null, false)!);\n\t\t\t}\n\n\t\t\tthis.negated = ContextKeyOrExpr.create(result, this, true)!;\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport interface ContextKeyInfo {\n\treadonly key: string;\n\treadonly type?: string;\n\treadonly description?: string;\n}\n\nexport class RawContextKey<T extends ContextKeyValue> extends ContextKeyDefinedExpr {\n\n\tprivate static _info: ContextKeyInfo[] = [];\n\n\tstatic all(): IterableIterator<ContextKeyInfo> {\n\t\treturn RawContextKey._info.values();\n\t}\n\n\tprivate readonly _defaultValue: T | undefined;\n\n\tconstructor(key: string, defaultValue: T | undefined, metaOrHide?: string | true | { type: string; description: string }) {\n\t\tsuper(key, null);\n\t\tthis._defaultValue = defaultValue;\n\n\t\t// collect all context keys into a central place\n\t\tif (typeof metaOrHide === 'object') {\n\t\t\tRawContextKey._info.push({ ...metaOrHide, key });\n\t\t} else if (metaOrHide !== true) {\n\t\t\tRawContextKey._info.push({ key, description: metaOrHide, type: defaultValue !== null && defaultValue !== undefined ? typeof defaultValue : undefined });\n\t\t}\n\t}\n\n\tpublic bindTo(target: IContextKeyService): IContextKey<T> {\n\t\treturn target.createKey(this.key, this._defaultValue);\n\t}\n\n\tpublic getValue(target: IContextKeyService): T | undefined {\n\t\treturn target.getContextKeyValue<T>(this.key);\n\t}\n\n\tpublic toNegated(): ContextKeyExpression {\n\t\treturn this.negate();\n\t}\n\n\tpublic isEqualTo(value: any): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(this.key, value);\n\t}\n\n\tpublic notEqualsTo(value: any): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(this.key, value);\n\t}\n}\n\nexport type ContextKeyValue = null | undefined | boolean | number | string\n\t| Array<null | undefined | boolean | number | string>\n\t| Record<string, null | undefined | boolean | number | string>;\n\nexport interface IContext {\n\tgetValue<T extends ContextKeyValue = ContextKeyValue>(key: string): T | undefined;\n}\n\nexport interface IContextKey<T extends ContextKeyValue = ContextKeyValue> {\n\tset(value: T): void;\n\treset(): void;\n\tget(): T | undefined;\n}\n\nexport interface IContextKeyServiceTarget {\n\tparentElement: IContextKeyServiceTarget | null;\n\tsetAttribute(attr: string, value: string): void;\n\tremoveAttribute(attr: string): void;\n\thasAttribute(attr: string): boolean;\n\tgetAttribute(attr: string): string | null;\n}\n\nexport const IContextKeyService = createDecorator<IContextKeyService>('contextKeyService');\n\nexport interface IReadableSet<T> {\n\thas(value: T): boolean;\n}\n\nexport interface IContextKeyChangeEvent {\n\taffectsSome(keys: IReadableSet<string>): boolean;\n\tallKeysContainedIn(keys: IReadableSet<string>): boolean;\n}\n\nexport type IScopedContextKeyService = IContextKeyService & IDisposable;\n\nexport interface IContextKeyService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidChangeContext: Event<IContextKeyChangeEvent>;\n\tbufferChangeEvents(callback: Function): void;\n\n\tcreateKey<T extends ContextKeyValue>(key: string, defaultValue: T | undefined): IContextKey<T>;\n\tcontextMatchesRules(rules: ContextKeyExpression | undefined): boolean;\n\tgetContextKeyValue<T>(key: string): T | undefined;\n\n\tcreateScoped(target: IContextKeyServiceTarget): IScopedContextKeyService;\n\tcreateOverlay(overlay: Iterable<[string, any]>): IContextKeyService;\n\tgetContext(target: IContextKeyServiceTarget | null): IContext;\n\n\tupdateParent(parentContextKeyService: IContextKeyService): void;\n}\n\nfunction cmp1(key1: string, key2: string): number {\n\tif (key1 < key2) {\n\t\treturn -1;\n\t}\n\tif (key1 > key2) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nfunction cmp2(key1: string, value1: any, key2: string, value2: any): number {\n\tif (key1 < key2) {\n\t\treturn -1;\n\t}\n\tif (key1 > key2) {\n\t\treturn 1;\n\t}\n\tif (value1 < value2) {\n\t\treturn -1;\n\t}\n\tif (value1 > value2) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\n/**\n * Returns true if it is provable `p` implies `q`.\n */\nexport function implies(p: ContextKeyExpression, q: ContextKeyExpression): boolean {\n\n\tif (p.type === ContextKeyExprType.False || q.type === ContextKeyExprType.True) {\n\t\t// false implies anything\n\t\t// anything implies true\n\t\treturn true;\n\t}\n\n\tif (p.type === ContextKeyExprType.Or) {\n\t\tif (q.type === ContextKeyExprType.Or) {\n\t\t\t// `a || b || c` can only imply something like `a || b || c || d`\n\t\t\treturn allElementsIncluded(p.expr, q.expr);\n\t\t}\n\t\treturn false;\n\t}\n\n\tif (q.type === ContextKeyExprType.Or) {\n\t\tfor (const element of q.expr) {\n\t\t\tif (implies(p, element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tif (p.type === ContextKeyExprType.And) {\n\t\tif (q.type === ContextKeyExprType.And) {\n\t\t\t// `a && b && c` implies `a && c`\n\t\t\treturn allElementsIncluded(q.expr, p.expr);\n\t\t}\n\t\tfor (const element of p.expr) {\n\t\t\tif (implies(element, q)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\treturn p.equals(q);\n}\n\n/**\n * Returns true if all elements in `p` are also present in `q`.\n * The two arrays are assumed to be sorted\n */\nfunction allElementsIncluded(p: ContextKeyExpression[], q: ContextKeyExpression[]): boolean {\n\tlet pIndex = 0;\n\tlet qIndex = 0;\n\twhile (pIndex < p.length && qIndex < q.length) {\n\t\tconst cmp = p[pIndex].cmp(q[qIndex]);\n\n\t\tif (cmp < 0) {\n\t\t\t// an element from `p` is missing from `q`\n\t\t\treturn false;\n\t\t} else if (cmp === 0) {\n\t\t\tpIndex++;\n\t\t\tqIndex++;\n\t\t} else {\n\t\t\tqIndex++;\n\t\t}\n\t}\n\treturn (pIndex === p.length);\n}\n\nfunction getTerminals(node: ContextKeyExpression) {\n\tif (node.type === ContextKeyExprType.Or) {\n\t\treturn node.expr;\n\t}\n\treturn [node];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { hash } from 'vs/base/common/hash';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { isWindows } from 'vs/base/common/platform';\nimport { joinPath } from 'vs/base/common/resources';\nimport { Mutable, isNumber, isString } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { ILocalizedString } from 'vs/platform/action/common/action';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const ILogService = createDecorator<ILogService>('logService');\nexport const ILoggerService = createDecorator<ILoggerService>('loggerService');\n\nfunction now(): string {\n\treturn new Date().toISOString();\n}\n\nexport function isLogLevel(thing: unknown): thing is LogLevel {\n\treturn isNumber(thing);\n}\n\nexport enum LogLevel {\n\tOff,\n\tTrace,\n\tDebug,\n\tInfo,\n\tWarning,\n\tError\n}\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = LogLevel.Info;\n\nexport interface ILogger extends IDisposable {\n\tonDidChangeLogLevel: Event<LogLevel>;\n\tgetLevel(): LogLevel;\n\tsetLevel(level: LogLevel): void;\n\n\ttrace(message: string, ...args: any[]): void;\n\tdebug(message: string, ...args: any[]): void;\n\tinfo(message: string, ...args: any[]): void;\n\twarn(message: string, ...args: any[]): void;\n\terror(message: string | Error, ...args: any[]): void;\n\n\t/**\n\t * An operation to flush the contents. Can be synchronous.\n\t */\n\tflush(): void;\n}\n\nexport function log(logger: ILogger, level: LogLevel, message: string): void {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: logger.trace(message); break;\n\t\tcase LogLevel.Debug: logger.debug(message); break;\n\t\tcase LogLevel.Info: logger.info(message); break;\n\t\tcase LogLevel.Warning: logger.warn(message); break;\n\t\tcase LogLevel.Error: logger.error(message); break;\n\t\tcase LogLevel.Off: /* do nothing */ break;\n\t\tdefault: throw new Error(`Invalid log level ${level}`);\n\t}\n}\n\nfunction format(args: any, verbose: boolean = false): string {\n\tlet result = '';\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tlet a = args[i];\n\n\t\tif (a instanceof Error) {\n\t\t\ta = toErrorMessage(a, verbose);\n\t\t}\n\n\t\tif (typeof a === 'object') {\n\t\t\ttry {\n\t\t\t\ta = JSON.stringify(a);\n\t\t\t} catch (e) { }\n\t\t}\n\n\t\tresult += (i > 0 ? ' ' : '') + a;\n\t}\n\n\treturn result;\n}\n\nexport interface ILogService extends ILogger {\n\treadonly _serviceBrand: undefined;\n}\n\nexport interface ILoggerOptions {\n\n\t/**\n\t * Id of the logger.\n\t */\n\tid?: string;\n\n\t/**\n\t * Name of the logger.\n\t */\n\tname?: string;\n\n\t/**\n\t * Do not create rotating files if max size exceeds.\n\t */\n\tdonotRotate?: boolean;\n\n\t/**\n\t * Do not use formatters.\n\t */\n\tdonotUseFormatters?: boolean;\n\n\t/**\n\t * When to log. Set to `always` to log always.\n\t */\n\tlogLevel?: 'always' | LogLevel;\n\n\t/**\n\t * Whether the log should be hidden from the user.\n\t */\n\thidden?: boolean;\n\n\t/**\n\t * Condition which must be true to show this logger\n\t */\n\twhen?: string;\n\n\t/**\n\t * Id of the extension that created this logger.\n\t */\n\textensionId?: string;\n}\n\nexport interface ILoggerResource {\n\treadonly resource: URI;\n\treadonly id: string;\n\treadonly name?: string;\n\treadonly logLevel?: LogLevel;\n\treadonly hidden?: boolean;\n\treadonly when?: string;\n\treadonly extensionId?: string;\n}\n\nexport type DidChangeLoggersEvent = {\n\treadonly added: Iterable<ILoggerResource>;\n\treadonly removed: Iterable<ILoggerResource>;\n};\n\nexport interface ILoggerService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Creates a logger for the given resource, or gets one if it already exists.\n\t *\n\t * This will also register the logger with the logger service.\n\t */\n\tcreateLogger(resource: URI, options?: ILoggerOptions): ILogger;\n\n\t/**\n\t * Creates a logger with the given id in the logs folder, or gets one if it already exists.\n\t *\n\t * This will also register the logger with the logger service.\n\t */\n\tcreateLogger(id: string, options?: Omit<ILoggerOptions, 'id'>): ILogger;\n\n\t/**\n\t * Gets an existing logger, if any.\n\t */\n\tgetLogger(resourceOrId: URI | string): ILogger | undefined;\n\n\t/**\n\t * An event which fires when the log level of a logger has changed\n\t */\n\treadonly onDidChangeLogLevel: Event<LogLevel | [URI, LogLevel]>;\n\n\t/**\n\t * Set default log level.\n\t */\n\tsetLogLevel(level: LogLevel): void;\n\n\t/**\n\t * Set log level for a logger.\n\t */\n\tsetLogLevel(resource: URI, level: LogLevel): void;\n\n\t/**\n\t * Get log level for a logger or the default log level.\n\t */\n\tgetLogLevel(resource?: URI): LogLevel;\n\n\t/**\n\t * An event which fires when the visibility of a logger has changed\n\t */\n\treadonly onDidChangeVisibility: Event<[URI, boolean]>;\n\n\t/**\n\t * Set the visibility of a logger.\n\t */\n\tsetVisibility(resourceOrId: URI | string, visible: boolean): void;\n\n\t/**\n\t * An event which fires when the logger resources are changed\n\t */\n\treadonly onDidChangeLoggers: Event<DidChangeLoggersEvent>;\n\n\t/**\n\t * Register a logger with the logger service.\n\t *\n\t * Note that this will not create a logger, but only register it.\n\t *\n\t * Use `createLogger` to create a logger and register it.\n\t *\n\t * Use it when you want to register a logger that is not created by the logger service.\n\t */\n\tregisterLogger(resource: ILoggerResource): void;\n\n\t/**\n\t * Deregister the logger for the given resource.\n\t */\n\tderegisterLogger(resource: URI): void;\n\n\t/**\n\t * Get all registered loggers\n\t */\n\tgetRegisteredLoggers(): Iterable<ILoggerResource>;\n\n\t/**\n\t * Get the registered logger for the given resource.\n\t */\n\tgetRegisteredLogger(resource: URI): ILoggerResource | undefined;\n}\n\nexport abstract class AbstractLogger extends Disposable implements ILogger {\n\n\tprivate level: LogLevel = DEFAULT_LOG_LEVEL;\n\tprivate readonly _onDidChangeLogLevel: Emitter<LogLevel> = this._register(new Emitter<LogLevel>());\n\treadonly onDidChangeLogLevel: Event<LogLevel> = this._onDidChangeLogLevel.event;\n\n\tsetLevel(level: LogLevel): void {\n\t\tif (this.level !== level) {\n\t\t\tthis.level = level;\n\t\t\tthis._onDidChangeLogLevel.fire(this.level);\n\t\t}\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.level;\n\t}\n\n\tprotected checkLogLevel(level: LogLevel): boolean {\n\t\treturn this.level !== LogLevel.Off && this.level <= level;\n\t}\n\n\tabstract trace(message: string, ...args: any[]): void;\n\tabstract debug(message: string, ...args: any[]): void;\n\tabstract info(message: string, ...args: any[]): void;\n\tabstract warn(message: string, ...args: any[]): void;\n\tabstract error(message: string | Error, ...args: any[]): void;\n\tabstract flush(): void;\n}\n\nexport abstract class AbstractMessageLogger extends AbstractLogger implements ILogger {\n\n\tprotected abstract log(level: LogLevel, message: string): void;\n\n\tconstructor(private readonly logAlways?: boolean) {\n\t\tsuper();\n\t}\n\n\tprotected override checkLogLevel(level: LogLevel): boolean {\n\t\treturn this.logAlways || super.checkLogLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Trace)) {\n\t\t\tthis.log(LogLevel.Trace, format([message, ...args], true));\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Debug)) {\n\t\t\tthis.log(LogLevel.Debug, format([message, ...args]));\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Info)) {\n\t\t\tthis.log(LogLevel.Info, format([message, ...args]));\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Warning)) {\n\t\t\tthis.log(LogLevel.Warning, format([message, ...args]));\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Error)) {\n\n\t\t\tif (message instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = message.stack;\n\t\t\t\tthis.log(LogLevel.Error, format(array));\n\t\t\t} else {\n\t\t\t\tthis.log(LogLevel.Error, format([message, ...args]));\n\t\t\t}\n\t\t}\n\t}\n\n\tflush(): void { }\n}\n\n\nexport class ConsoleMainLogger extends AbstractLogger implements ILogger {\n\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = !isWindows;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Trace)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Debug)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Info)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Warning)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Error)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n\n}\n\nexport class ConsoleLogger extends AbstractLogger implements ILogger {\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL, private readonly useColors: boolean = true) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Trace)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log('%cTRACE', 'color: #888', message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Debug)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Info)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log('%c INFO', 'color: #33f', message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Warning)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log('%c WARN', 'color: #993', message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Error)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log('%c  ERR', 'color: #f33', message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class AdapterLogger extends AbstractLogger implements ILogger {\n\n\tconstructor(private readonly adapter: { log: (logLevel: LogLevel, args: any[]) => void }, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Trace)) {\n\t\t\tthis.adapter.log(LogLevel.Trace, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Debug)) {\n\t\t\tthis.adapter.log(LogLevel.Debug, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Info)) {\n\t\t\tthis.adapter.log(LogLevel.Info, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Warning)) {\n\t\t\tthis.adapter.log(LogLevel.Warning, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Error)) {\n\t\t\tthis.adapter.log(LogLevel.Error, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tprivate extractMessage(msg: string | Error): string {\n\t\tif (typeof msg === 'string') {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn toErrorMessage(msg, this.checkLogLevel(LogLevel.Trace));\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class MultiplexLogger extends AbstractLogger implements ILogger {\n\n\tconstructor(private readonly loggers: ReadonlyArray<ILogger>) {\n\t\tsuper();\n\t\tif (loggers.length) {\n\t\t\tthis.setLevel(loggers[0].getLevel());\n\t\t}\n\t}\n\n\toverride setLevel(level: LogLevel): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.setLevel(level);\n\t\t}\n\t\tsuper.setLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.trace(message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.debug(message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.info(message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.warn(message, ...args);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.error(message, ...args);\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.flush();\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.dispose();\n\t\t}\n\t\tsuper.dispose();\n\t}\n}\n\ntype LoggerEntry = { logger: ILogger | undefined; info: Mutable<ILoggerResource> };\n\nexport abstract class AbstractLoggerService extends Disposable implements ILoggerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _loggers = new ResourceMap<LoggerEntry>();\n\n\tprivate _onDidChangeLoggers = this._register(new Emitter<{ added: ILoggerResource[]; removed: ILoggerResource[] }>);\n\treadonly onDidChangeLoggers = this._onDidChangeLoggers.event;\n\n\tprivate _onDidChangeLogLevel = this._register(new Emitter<LogLevel | [URI, LogLevel]>);\n\treadonly onDidChangeLogLevel = this._onDidChangeLogLevel.event;\n\n\tprivate _onDidChangeVisibility = this._register(new Emitter<[URI, boolean]>);\n\treadonly onDidChangeVisibility = this._onDidChangeVisibility.event;\n\n\tconstructor(\n\t\tprotected logLevel: LogLevel,\n\t\tprivate readonly logsHome: URI,\n\t\tloggerResources?: Iterable<ILoggerResource>,\n\t) {\n\t\tsuper();\n\t\tif (loggerResources) {\n\t\t\tfor (const loggerResource of loggerResources) {\n\t\t\t\tthis._loggers.set(loggerResource.resource, { logger: undefined, info: loggerResource });\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getLoggerEntry(resourceOrId: URI | string): LoggerEntry | undefined {\n\t\tif (isString(resourceOrId)) {\n\t\t\treturn [...this._loggers.values()].find(logger => logger.info.id === resourceOrId);\n\t\t}\n\t\treturn this._loggers.get(resourceOrId);\n\t}\n\n\tgetLogger(resourceOrId: URI | string): ILogger | undefined {\n\t\treturn this.getLoggerEntry(resourceOrId)?.logger;\n\t}\n\n\tcreateLogger(idOrResource: URI | string, options?: ILoggerOptions): ILogger {\n\t\tconst resource = this.toResource(idOrResource);\n\t\tconst id = isString(idOrResource) ? idOrResource : (options?.id ?? hash(resource.toString()).toString(16));\n\t\tlet logger = this._loggers.get(resource)?.logger;\n\t\tconst logLevel = options?.logLevel === 'always' ? LogLevel.Trace : options?.logLevel;\n\t\tif (!logger) {\n\t\t\tlogger = this.doCreateLogger(resource, logLevel ?? this.getLogLevel(resource) ?? this.logLevel, { ...options, id });\n\t\t}\n\t\tconst loggerEntry: LoggerEntry = {\n\t\t\tlogger,\n\t\t\tinfo: { resource, id, logLevel, name: options?.name, hidden: options?.hidden, extensionId: options?.extensionId, when: options?.when }\n\t\t};\n\t\tthis.registerLogger(loggerEntry.info);\n\t\t// TODO: @sandy081 Remove this once registerLogger can take ILogger\n\t\tthis._loggers.set(resource, loggerEntry);\n\t\treturn logger;\n\t}\n\n\tprotected toResource(idOrResource: string | URI): URI {\n\t\treturn isString(idOrResource) ? joinPath(this.logsHome, `${idOrResource}.log`) : idOrResource;\n\t}\n\n\tsetLogLevel(logLevel: LogLevel): void;\n\tsetLogLevel(resource: URI, logLevel: LogLevel): void;\n\tsetLogLevel(arg1: any, arg2?: any): void {\n\t\tif (URI.isUri(arg1)) {\n\t\t\tconst resource = arg1;\n\t\t\tconst logLevel = arg2;\n\t\t\tconst logger = this._loggers.get(resource);\n\t\t\tif (logger && logLevel !== logger.info.logLevel) {\n\t\t\t\tlogger.info.logLevel = logLevel === this.logLevel ? undefined : logLevel;\n\t\t\t\tlogger.logger?.setLevel(logLevel);\n\t\t\t\tthis._loggers.set(logger.info.resource, logger);\n\t\t\t\tthis._onDidChangeLogLevel.fire([resource, logLevel]);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.logLevel = arg1;\n\t\t\tfor (const [resource, logger] of this._loggers.entries()) {\n\t\t\t\tif (this._loggers.get(resource)?.info.logLevel === undefined) {\n\t\t\t\t\tlogger.logger?.setLevel(this.logLevel);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._onDidChangeLogLevel.fire(this.logLevel);\n\t\t}\n\t}\n\n\tsetVisibility(resourceOrId: URI | string, visibility: boolean): void {\n\t\tconst logger = this.getLoggerEntry(resourceOrId);\n\t\tif (logger && visibility !== !logger.info.hidden) {\n\t\t\tlogger.info.hidden = !visibility;\n\t\t\tthis._loggers.set(logger.info.resource, logger);\n\t\t\tthis._onDidChangeVisibility.fire([logger.info.resource, visibility]);\n\t\t}\n\t}\n\n\tgetLogLevel(resource?: URI): LogLevel {\n\t\tlet logLevel;\n\t\tif (resource) {\n\t\t\tlogLevel = this._loggers.get(resource)?.info.logLevel;\n\t\t}\n\t\treturn logLevel ?? this.logLevel;\n\t}\n\n\tregisterLogger(resource: ILoggerResource): void {\n\t\tconst existing = this._loggers.get(resource.resource);\n\t\tif (existing) {\n\t\t\tif (existing.info.hidden !== resource.hidden) {\n\t\t\t\tthis.setVisibility(resource.resource, !resource.hidden);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._loggers.set(resource.resource, { info: resource, logger: undefined });\n\t\t\tthis._onDidChangeLoggers.fire({ added: [resource], removed: [] });\n\t\t}\n\t}\n\n\tderegisterLogger(resource: URI): void {\n\t\tconst existing = this._loggers.get(resource);\n\t\tif (existing) {\n\t\t\tif (existing.logger) {\n\t\t\t\texisting.logger.dispose();\n\t\t\t}\n\t\t\tthis._loggers.delete(resource);\n\t\t\tthis._onDidChangeLoggers.fire({ added: [], removed: [existing.info] });\n\t\t}\n\t}\n\n\t*getRegisteredLoggers(): Iterable<ILoggerResource> {\n\t\tfor (const entry of this._loggers.values()) {\n\t\t\tyield entry.info;\n\t\t}\n\t}\n\n\tgetRegisteredLogger(resource: URI): ILoggerResource | undefined {\n\t\treturn this._loggers.get(resource)?.info;\n\t}\n\n\toverride dispose(): void {\n\t\tthis._loggers.forEach(logger => logger.logger?.dispose());\n\t\tthis._loggers.clear();\n\t\tsuper.dispose();\n\t}\n\n\tprotected abstract doCreateLogger(resource: URI, logLevel: LogLevel, options?: ILoggerOptions): ILogger;\n}\n\nexport class NullLogger implements ILogger {\n\treadonly onDidChangeLogLevel: Event<LogLevel> = new Emitter<LogLevel>().event;\n\tsetLevel(level: LogLevel): void { }\n\tgetLevel(): LogLevel { return LogLevel.Info; }\n\ttrace(message: string, ...args: any[]): void { }\n\tdebug(message: string, ...args: any[]): void { }\n\tinfo(message: string, ...args: any[]): void { }\n\twarn(message: string, ...args: any[]): void { }\n\terror(message: string | Error, ...args: any[]): void { }\n\tcritical(message: string | Error, ...args: any[]): void { }\n\tdispose(): void { }\n\tflush(): void { }\n}\n\nexport class NullLogService extends NullLogger implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n}\n\nexport function getLogLevel(environmentService: IEnvironmentService): LogLevel {\n\tif (environmentService.verbose) {\n\t\treturn LogLevel.Trace;\n\t}\n\tif (typeof environmentService.logLevel === 'string') {\n\t\tconst logLevel = parseLogLevel(environmentService.logLevel.toLowerCase());\n\t\tif (logLevel !== undefined) {\n\t\t\treturn logLevel;\n\t\t}\n\t}\n\treturn DEFAULT_LOG_LEVEL;\n}\n\nexport function LogLevelToString(logLevel: LogLevel): string {\n\tswitch (logLevel) {\n\t\tcase LogLevel.Trace: return 'trace';\n\t\tcase LogLevel.Debug: return 'debug';\n\t\tcase LogLevel.Info: return 'info';\n\t\tcase LogLevel.Warning: return 'warn';\n\t\tcase LogLevel.Error: return 'error';\n\t\tcase LogLevel.Off: return 'off';\n\t}\n}\n\nexport function LogLevelToLocalizedString(logLevel: LogLevel): ILocalizedString {\n\tswitch (logLevel) {\n\t\tcase LogLevel.Trace: return { original: 'Trace', value: nls.localize('trace', \"Trace\") };\n\t\tcase LogLevel.Debug: return { original: 'Debug', value: nls.localize('debug', \"Debug\") };\n\t\tcase LogLevel.Info: return { original: 'Info', value: nls.localize('info', \"Info\") };\n\t\tcase LogLevel.Warning: return { original: 'Warning', value: nls.localize('warn', \"Warning\") };\n\t\tcase LogLevel.Error: return { original: 'Error', value: nls.localize('error', \"Error\") };\n\t\tcase LogLevel.Off: return { original: 'Off', value: nls.localize('off', \"Off\") };\n\t}\n}\n\nexport function parseLogLevel(logLevel: string): LogLevel | undefined {\n\tswitch (logLevel) {\n\t\tcase 'trace':\n\t\t\treturn LogLevel.Trace;\n\t\tcase 'debug':\n\t\t\treturn LogLevel.Debug;\n\t\tcase 'info':\n\t\t\treturn LogLevel.Info;\n\t\tcase 'warn':\n\t\t\treturn LogLevel.Warning;\n\t\tcase 'error':\n\t\t\treturn LogLevel.Error;\n\t\tcase 'critical':\n\t\t\treturn LogLevel.Error;\n\t\tcase 'off':\n\t\t\treturn LogLevel.Off;\n\t}\n\treturn undefined;\n}\n\n// Contexts\nexport const CONTEXT_LOG_LEVEL = new RawContextKey<string>('logLevel', LogLevelToString(LogLevel.Info));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { basename, isAbsolute, join } from 'vs/base/common/path';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport interface IV8Profile {\n\tnodes: IV8ProfileNode[];\n\tsamples?: number[];\n\ttimeDeltas?: number[];\n\tstartTime: number;\n\tendTime: number;\n}\n\nexport interface IV8ProfileNode {\n\tid: number;\n\thitCount?: number;\n\tchildren?: number[];\n\tcallFrame: IV8CallFrame;\n\tdeoptReason?: string;\n\tpositionTicks?: { line: number; ticks: number }[];\n}\n\nexport interface IV8CallFrame {\n\turl: string;\n\tscriptId: string;\n\tfunctionName: string;\n\tlineNumber: number;\n\tcolumnNumber: number;\n}\n\nexport const IV8InspectProfilingService = createDecorator<IV8InspectProfilingService>('IV8InspectProfilingService');\n\nexport interface IV8InspectProfilingService {\n\n\t_serviceBrand: undefined;\n\n\tstartProfiling(options: { host: string; port: number }): Promise<string>;\n\n\tstopProfiling(sessionId: string): Promise<IV8Profile>;\n}\n\n\nexport namespace Utils {\n\n\texport function isValidProfile(profile: IV8Profile): profile is Required<IV8Profile> {\n\t\treturn Boolean(profile.samples && profile.timeDeltas);\n\t}\n\n\texport function rewriteAbsolutePaths(profile: IV8Profile, replace: string = 'noAbsolutePaths') {\n\t\tfor (const node of profile.nodes) {\n\t\t\tif (node.callFrame && node.callFrame.url) {\n\t\t\t\tif (isAbsolute(node.callFrame.url) || /^\\w[\\w\\d+.-]*:\\/\\/\\/?/.test(node.callFrame.url)) {\n\t\t\t\t\tnode.callFrame.url = join(replace, basename(node.callFrame.url));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn profile;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IV8Profile, IV8ProfileNode } from 'vs/platform/profiling/common/profiling';\n\n// #region\n// https://github.com/microsoft/vscode-js-profile-visualizer/blob/6e7401128ee860be113a916f80fcfe20ac99418e/packages/vscode-js-profile-core/src/cpu/model.ts#L4\n\nexport interface IProfileModel {\n\tnodes: ReadonlyArray<IComputedNode>;\n\tlocations: ReadonlyArray<ILocation>;\n\tsamples: ReadonlyArray<number>;\n\ttimeDeltas: ReadonlyArray<number>;\n\trootPath?: string;\n\tduration: number;\n}\n\nexport interface IComputedNode {\n\tid: number;\n\tselfTime: number;\n\taggregateTime: number;\n\tchildren: number[];\n\tparent?: number;\n\tlocationId: number;\n}\n\nexport interface ISourceLocation {\n\tlineNumber: number;\n\tcolumnNumber: number;\n\t//   source: Dap.Source;\n\trelativePath?: string;\n}\n\nexport interface CdpCallFrame {\n\tfunctionName: string;\n\tscriptId: string;\n\turl: string;\n\tlineNumber: number;\n\tcolumnNumber: number;\n}\n\nexport interface CdpPositionTickInfo {\n\tline: number;\n\tticks: number;\n}\n\nexport interface INode {\n\tid: number;\n\t//   category: Category;\n\tcallFrame: CdpCallFrame;\n\tsrc?: ISourceLocation;\n}\n\nexport interface ILocation extends INode {\n\tselfTime: number;\n\taggregateTime: number;\n\tticks: number;\n}\n\nexport interface IAnnotationLocation {\n\tcallFrame: CdpCallFrame;\n\tlocations: ISourceLocation[];\n}\n\nexport interface IProfileNode extends IV8ProfileNode {\n\tlocationId?: number;\n\tpositionTicks?: (CdpPositionTickInfo & {\n\t\tstartLocationId?: number;\n\t\tendLocationId?: number;\n\t})[];\n}\n\nexport interface ICpuProfileRaw extends IV8Profile {\n\t//   $vscode?: IJsDebugAnnotations;\n\tnodes: IProfileNode[];\n}\n\n\n/**\n * Recursive function that computes and caches the aggregate time for the\n * children of the computed now.\n */\nconst computeAggregateTime = (index: number, nodes: IComputedNode[]): number => {\n\tconst row = nodes[index];\n\tif (row.aggregateTime) {\n\t\treturn row.aggregateTime;\n\t}\n\n\tlet total = row.selfTime;\n\tfor (const child of row.children) {\n\t\ttotal += computeAggregateTime(child, nodes);\n\t}\n\n\treturn (row.aggregateTime = total);\n};\n\nconst ensureSourceLocations = (profile: ICpuProfileRaw): ReadonlyArray<IAnnotationLocation> => {\n\n\tlet locationIdCounter = 0;\n\tconst locationsByRef = new Map<string, { id: number; callFrame: CdpCallFrame; location: ISourceLocation }>();\n\n\tconst getLocationIdFor = (callFrame: CdpCallFrame) => {\n\t\tconst ref = [\n\t\t\tcallFrame.functionName,\n\t\t\tcallFrame.url,\n\t\t\tcallFrame.scriptId,\n\t\t\tcallFrame.lineNumber,\n\t\t\tcallFrame.columnNumber,\n\t\t].join(':');\n\n\t\tconst existing = locationsByRef.get(ref);\n\t\tif (existing) {\n\t\t\treturn existing.id;\n\t\t}\n\t\tconst id = locationIdCounter++;\n\t\tlocationsByRef.set(ref, {\n\t\t\tid,\n\t\t\tcallFrame,\n\t\t\tlocation: {\n\t\t\t\tlineNumber: callFrame.lineNumber + 1,\n\t\t\t\tcolumnNumber: callFrame.columnNumber + 1,\n\t\t\t\t// source: {\n\t\t\t\t// \tname: maybeFileUrlToPath(callFrame.url),\n\t\t\t\t// \tpath: maybeFileUrlToPath(callFrame.url),\n\t\t\t\t// \tsourceReference: 0,\n\t\t\t\t// },\n\t\t\t},\n\t\t});\n\n\t\treturn id;\n\t};\n\n\tfor (const node of profile.nodes) {\n\t\tnode.locationId = getLocationIdFor(node.callFrame);\n\t\tnode.positionTicks = node.positionTicks?.map(tick => ({\n\t\t\t...tick,\n\t\t\t// weirdly, line numbers here are 1-based, not 0-based. The position tick\n\t\t\t// only gives line-level granularity, so 'mark' the entire range of source\n\t\t\t// code the tick refers to\n\t\t\tstartLocationId: getLocationIdFor({\n\t\t\t\t...node.callFrame,\n\t\t\t\tlineNumber: tick.line - 1,\n\t\t\t\tcolumnNumber: 0,\n\t\t\t}),\n\t\t\tendLocationId: getLocationIdFor({\n\t\t\t\t...node.callFrame,\n\t\t\t\tlineNumber: tick.line,\n\t\t\t\tcolumnNumber: 0,\n\t\t\t}),\n\t\t}));\n\t}\n\n\treturn [...locationsByRef.values()]\n\t\t.sort((a, b) => a.id - b.id)\n\t\t.map(l => ({ locations: [l.location], callFrame: l.callFrame }));\n};\n\n/**\n * Computes the model for the given profile.\n */\nexport const buildModel = (profile: ICpuProfileRaw): IProfileModel => {\n\tif (!profile.timeDeltas || !profile.samples) {\n\t\treturn {\n\t\t\tnodes: [],\n\t\t\tlocations: [],\n\t\t\tsamples: profile.samples || [],\n\t\t\ttimeDeltas: profile.timeDeltas || [],\n\t\t\t// rootPath: profile.$vscode?.rootPath,\n\t\t\tduration: profile.endTime - profile.startTime,\n\t\t};\n\t}\n\n\tconst { samples, timeDeltas } = profile;\n\tconst sourceLocations = ensureSourceLocations(profile);\n\tconst locations: ILocation[] = sourceLocations.map((l, id) => {\n\t\tconst src = l.locations[0]; //getBestLocation(profile, l.locations);\n\n\t\treturn {\n\t\t\tid,\n\t\t\tselfTime: 0,\n\t\t\taggregateTime: 0,\n\t\t\tticks: 0,\n\t\t\t// category: categorize(l.callFrame, src),\n\t\t\tcallFrame: l.callFrame,\n\t\t\tsrc,\n\t\t};\n\t});\n\n\tconst idMap = new Map<number /* id in profile */, number /* incrementing ID */>();\n\tconst mapId = (nodeId: number) => {\n\t\tlet id = idMap.get(nodeId);\n\t\tif (id === undefined) {\n\t\t\tid = idMap.size;\n\t\t\tidMap.set(nodeId, id);\n\t\t}\n\n\t\treturn id;\n\t};\n\n\t// 1. Created a sorted list of nodes. It seems that the profile always has\n\t// incrementing IDs, although they are just not initially sorted.\n\tconst nodes = new Array<IComputedNode>(profile.nodes.length);\n\tfor (let i = 0; i < profile.nodes.length; i++) {\n\t\tconst node = profile.nodes[i];\n\n\t\t// make them 0-based:\n\t\tconst id = mapId(node.id);\n\t\tnodes[id] = {\n\t\t\tid,\n\t\t\tselfTime: 0,\n\t\t\taggregateTime: 0,\n\t\t\tlocationId: node.locationId as number,\n\t\t\tchildren: node.children?.map(mapId) || [],\n\t\t};\n\n\t\tfor (const child of node.positionTicks || []) {\n\t\t\tif (child.startLocationId) {\n\t\t\t\tlocations[child.startLocationId].ticks += child.ticks;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (const node of nodes) {\n\t\tfor (const child of node.children) {\n\t\t\tnodes[child].parent = node.id;\n\t\t}\n\t}\n\n\t// 2. The profile samples are the 'bottom-most' node, the currently running\n\t// code. Sum of these in the self time.\n\tconst duration = profile.endTime - profile.startTime;\n\tlet lastNodeTime = duration - timeDeltas[0];\n\tfor (let i = 0; i < timeDeltas.length - 1; i++) {\n\t\tconst d = timeDeltas[i + 1];\n\t\tnodes[mapId(samples[i])].selfTime += d;\n\t\tlastNodeTime -= d;\n\t}\n\n\t// Add in an extra time delta for the last sample. `timeDeltas[0]` is the\n\t// time before the first sample, and the time of the last sample is only\n\t// derived (approximately) by the missing time in the sum of deltas. Save\n\t// some work by calculating it here.\n\tif (nodes.length) {\n\t\tnodes[mapId(samples[timeDeltas.length - 1])].selfTime += lastNodeTime;\n\t\ttimeDeltas.push(lastNodeTime);\n\t}\n\n\t// 3. Add the aggregate times for all node children and locations\n\tfor (let i = 0; i < nodes.length; i++) {\n\t\tconst node = nodes[i];\n\t\tconst location = locations[node.locationId];\n\t\tlocation.aggregateTime += computeAggregateTime(i, nodes);\n\t\tlocation.selfTime += node.selfTime;\n\t}\n\n\treturn {\n\t\tnodes,\n\t\tlocations,\n\t\tsamples: samples.map(mapId),\n\t\ttimeDeltas,\n\t\t// rootPath: profile.$vscode?.rootPath,\n\t\tduration,\n\t};\n};\n\nexport class BottomUpNode {\n\tpublic static root() {\n\t\treturn new BottomUpNode({\n\t\t\tid: -1,\n\t\t\tselfTime: 0,\n\t\t\taggregateTime: 0,\n\t\t\tticks: 0,\n\t\t\tcallFrame: {\n\t\t\t\tfunctionName: '(root)',\n\t\t\t\tlineNumber: -1,\n\t\t\t\tcolumnNumber: -1,\n\t\t\t\tscriptId: '0',\n\t\t\t\turl: '',\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic children: { [id: number]: BottomUpNode } = {};\n\tpublic aggregateTime = 0;\n\tpublic selfTime = 0;\n\tpublic ticks = 0;\n\tpublic childrenSize = 0;\n\n\tpublic get id() {\n\t\treturn this.location.id;\n\t}\n\n\tpublic get callFrame() {\n\t\treturn this.location.callFrame;\n\t}\n\n\tpublic get src() {\n\t\treturn this.location.src;\n\t}\n\n\tconstructor(public readonly location: ILocation, public readonly parent?: BottomUpNode) { }\n\n\tpublic addNode(node: IComputedNode) {\n\t\tthis.selfTime += node.selfTime;\n\t\tthis.aggregateTime += node.aggregateTime;\n\t}\n\n}\n\nexport const processNode = (aggregate: BottomUpNode, node: IComputedNode, model: IProfileModel, initialNode = node) => {\n\tlet child = aggregate.children[node.locationId];\n\tif (!child) {\n\t\tchild = new BottomUpNode(model.locations[node.locationId], aggregate);\n\t\taggregate.childrenSize++;\n\t\taggregate.children[node.locationId] = child;\n\t}\n\n\tchild.addNode(initialNode);\n\n\tif (node.parent) {\n\t\tprocessNode(child, model.nodes[node.parent], model, initialNode);\n\t}\n};\n\n//#endregion\n\n\nexport interface BottomUpSample {\n\tselfTime: number;\n\ttotalTime: number;\n\tlocation: string;\n\tabsLocation: string;\n\turl: string;\n\tcaller: { percentage: number; absLocation: string; location: string }[];\n\tpercentage: number;\n\tisSpecial: boolean;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { BottomUpSample } from 'vs/platform/profiling/common/profilingModel';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { errorHandler } from 'vs/base/common/errors';\n\ntype TelemetrySampleData = {\n\tselfTime: number;\n\ttotalTime: number;\n\tpercentage: number;\n\tperfBaseline: number;\n\tfunctionName: string;\n\tcallers: string;\n\tcallersAnnotated: string;\n\tsource: string;\n};\n\ntype TelemetrySampleDataClassification = {\n\towner: 'jrieken';\n\tcomment: 'A callstack that took a long time to execute';\n\tselfTime: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'Self time of the sample' };\n\ttotalTime: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'Total time of the sample' };\n\tpercentage: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'Relative time (percentage) of the sample' };\n\tperfBaseline: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'Performance baseline for the machine' };\n\tfunctionName: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The name of the sample' };\n\tcallers: { classification: 'CallstackOrException'; purpose: 'PerformanceAndHealth'; comment: 'The heaviest call trace into this sample' };\n\tcallersAnnotated: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The heaviest call trace into this sample annotated with respective costs' };\n\tsource: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The source - either renderer or an extension' };\n};\n\nexport interface SampleData {\n\tperfBaseline: number;\n\tsample: BottomUpSample;\n\tsource: string;\n}\n\nexport function reportSample(data: SampleData, telemetryService: ITelemetryService, logService: ILogService, sendAsErrorTelemtry: boolean): void {\n\n\tconst { sample, perfBaseline, source } = data;\n\n\t// send telemetry event\n\ttelemetryService.publicLog2<TelemetrySampleData, TelemetrySampleDataClassification>(`unresponsive.sample`, {\n\t\tperfBaseline,\n\t\tselfTime: sample.selfTime,\n\t\ttotalTime: sample.totalTime,\n\t\tpercentage: sample.percentage,\n\t\tfunctionName: sample.location,\n\t\tcallers: sample.caller.map(c => c.location).join('<'),\n\t\tcallersAnnotated: sample.caller.map(c => `${c.percentage}|${c.location}`).join('<'),\n\t\tsource\n\t});\n\n\t// log a fake error with a clearer stack\n\tconst fakeError = new PerformanceError(data);\n\tif (sendAsErrorTelemtry) {\n\t\terrorHandler.onUnexpectedError(fakeError);\n\t} else {\n\t\tlogService.error(fakeError);\n\t}\n}\n\nclass PerformanceError extends Error {\n\treadonly selfTime: number;\n\n\tconstructor(data: SampleData) {\n\t\tsuper(`PerfSampleError: by ${data.source} in ${data.sample.location}`);\n\t\tthis.name = 'PerfSampleError';\n\t\tthis.selfTime = data.sample.selfTime;\n\n\t\tconst trace = [data.sample.absLocation, ...data.sample.caller.map(c => c.absLocation)];\n\t\tthis.stack = `\\n\\t at ${trace.join('\\n\\t at ')}`;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ClassifiedEvent, IGDPRProperty, OmitMetadata, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\n\nexport const ITelemetryService = createDecorator<ITelemetryService>('telemetryService');\n\nexport interface ITelemetryData {\n\tfrom?: string;\n\ttarget?: string;\n\t[key: string]: any;\n}\n\nexport interface ITelemetryService {\n\n\treadonly _serviceBrand: undefined;\n\n\treadonly telemetryLevel: TelemetryLevel;\n\n\treadonly sessionId: string;\n\treadonly machineId: string;\n\treadonly sqmId: string;\n\treadonly devDeviceId: string;\n\treadonly firstSessionDate: string;\n\treadonly msftInternal?: boolean;\n\n\t/**\n\t * Whether error telemetry will get sent. If false, `publicLogError` will no-op.\n\t */\n\treadonly sendErrorTelemetry: boolean;\n\n\t/**\n\t * @deprecated Use publicLog2 and the typescript GDPR annotation where possible\n\t */\n\tpublicLog(eventName: string, data?: ITelemetryData): void;\n\n\t/**\n\t * Sends a telemetry event that has been privacy approved.\n\t * Do not call this unless you have been given approval.\n\t */\n\tpublicLog2<E extends ClassifiedEvent<OmitMetadata<T>> = never, T extends IGDPRProperty = never>(eventName: string, data?: StrictPropertyCheck<T, E>): void;\n\n\t/**\n\t * @deprecated Use publicLogError2 and the typescript GDPR annotation where possible\n\t */\n\tpublicLogError(errorEventName: string, data?: ITelemetryData): void;\n\n\tpublicLogError2<E extends ClassifiedEvent<OmitMetadata<T>> = never, T extends IGDPRProperty = never>(eventName: string, data?: StrictPropertyCheck<T, E>): void;\n\n\tsetExperimentProperty(name: string, value: string): void;\n}\n\nexport interface ITelemetryEndpoint {\n\tid: string;\n\taiKey: string;\n\tsendErrorTelemetry: boolean;\n}\n\nexport const ICustomEndpointTelemetryService = createDecorator<ICustomEndpointTelemetryService>('customEndpointTelemetryService');\n\nexport interface ICustomEndpointTelemetryService {\n\treadonly _serviceBrand: undefined;\n\n\tpublicLog(endpoint: ITelemetryEndpoint, eventName: string, data?: ITelemetryData): void;\n\tpublicLogError(endpoint: ITelemetryEndpoint, errorEventName: string, data?: ITelemetryData): void;\n}\n\n// Keys\nexport const currentSessionDateStorageKey = 'telemetry.currentSessionDate';\nexport const firstSessionDateStorageKey = 'telemetry.firstSessionDate';\nexport const lastSessionDateStorageKey = 'telemetry.lastSessionDate';\nexport const machineIdKey = 'telemetry.machineId';\nexport const sqmIdKey = 'telemetry.sqmId';\nexport const devDeviceIdKey = 'telemetry.devDeviceId';\n\n// Configuration Keys\nexport const TELEMETRY_SECTION_ID = 'telemetry';\nexport const TELEMETRY_SETTING_ID = 'telemetry.telemetryLevel';\nexport const TELEMETRY_CRASH_REPORTER_SETTING_ID = 'telemetry.enableCrashReporter';\nexport const TELEMETRY_OLD_SETTING_ID = 'telemetry.enableTelemetry';\n\nexport const enum TelemetryLevel {\n\tNONE = 0,\n\tCRASH = 1,\n\tERROR = 2,\n\tUSAGE = 3\n}\n\nexport const enum TelemetryConfiguration {\n\tOFF = 'off',\n\tCRASH = 'crash',\n\tERROR = 'error',\n\tON = 'all'\n}\n\nexport interface ICommonProperties {\n\t[name: string]: string | boolean | undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nimport { DefaultWorkerFactory } from 'vs/base/browser/defaultWorkerFactory';\nimport { URI } from 'vs/base/common/uri';\nimport { SimpleWorkerClient } from 'vs/base/common/worker/simpleWorker';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IV8Profile } from 'vs/platform/profiling/common/profiling';\nimport { BottomUpSample } from 'vs/platform/profiling/common/profilingModel';\nimport { reportSample } from 'vs/platform/profiling/common/profilingTelemetrySpec';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\n\nexport const enum ProfilingOutput {\n\tFailure,\n\tIrrelevant,\n\tInteresting,\n}\n\nexport interface IScriptUrlClassifier {\n\t(scriptUrl: string): string;\n}\n\nexport const IProfileAnalysisWorkerService = createDecorator<IProfileAnalysisWorkerService>('IProfileAnalysisWorkerService');\n\nexport interface IProfileAnalysisWorkerService {\n\treadonly _serviceBrand: undefined;\n\tanalyseBottomUp(profile: IV8Profile, callFrameClassifier: IScriptUrlClassifier, perfBaseline: number, sendAsErrorTelemtry: boolean): Promise<ProfilingOutput>;\n\tanalyseByLocation(profile: IV8Profile, locations: [location: URI, id: string][]): Promise<[category: string, aggregated: number][]>;\n}\n\n\n// ---- impl\n\nclass ProfileAnalysisWorkerService implements IProfileAnalysisWorkerService {\n\n\tdeclare _serviceBrand: undefined;\n\n\tprivate readonly _workerFactory = new DefaultWorkerFactory('CpuProfileAnalysis');\n\n\tconstructor(\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t) { }\n\n\tprivate async _withWorker<R>(callback: (worker: Proxied<IProfileAnalysisWorker>) => Promise<R>): Promise<R> {\n\n\t\tconst worker = new SimpleWorkerClient<Proxied<IProfileAnalysisWorker>, {}>(\n\t\t\tthis._workerFactory,\n\t\t\t'vs/platform/profiling/electron-sandbox/profileAnalysisWorker',\n\t\t\t{ /* host */ }\n\t\t);\n\n\t\ttry {\n\t\t\tconst r = await callback(await worker.getProxyObject());\n\t\t\treturn r;\n\t\t} finally {\n\t\t\tworker.dispose();\n\t\t}\n\t}\n\n\tasync analyseBottomUp(profile: IV8Profile, callFrameClassifier: IScriptUrlClassifier, perfBaseline: number, sendAsErrorTelemtry: boolean): Promise<ProfilingOutput> {\n\t\treturn this._withWorker(async worker => {\n\t\t\tconst result = await worker.analyseBottomUp(profile);\n\t\t\tif (result.kind === ProfilingOutput.Interesting) {\n\t\t\t\tfor (const sample of result.samples) {\n\t\t\t\t\treportSample({\n\t\t\t\t\t\tsample,\n\t\t\t\t\t\tperfBaseline,\n\t\t\t\t\t\tsource: callFrameClassifier(sample.url)\n\t\t\t\t\t}, this._telemetryService, this._logService, sendAsErrorTelemtry);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result.kind;\n\t\t});\n\t}\n\n\tasync analyseByLocation(profile: IV8Profile, locations: [location: URI, id: string][]): Promise<[category: string, aggregated: number][]> {\n\t\treturn this._withWorker(async worker => {\n\t\t\tconst result = await worker.analyseByUrlCategory(profile, locations);\n\t\t\treturn result;\n\t\t});\n\t}\n}\n\n// ---- worker contract\n\nexport interface BottomUpAnalysis {\n\tkind: ProfilingOutput;\n\tsamples: BottomUpSample[];\n}\n\nexport interface CategoryAnalysis {\n\tcategory: string;\n\tpercentage: number;\n\taggregated: number;\n\toverallDuration: number;\n}\n\nexport interface IProfileAnalysisWorker {\n\tanalyseBottomUp(profile: IV8Profile): BottomUpAnalysis;\n\tanalyseByUrlCategory(profile: IV8Profile, categories: [url: URI, category: string][]): [category: string, aggregated: number][];\n}\n\n// TODO@jrieken move into worker logic\ntype Proxied<T> = { [K in keyof T]: T[K] extends (...args: infer A) => infer R\n\t? (...args: A) => Promise<Awaited<R>>\n\t: never\n};\n\n\nregisterSingleton(IProfileAnalysisWorkerService, ProfileAnalysisWorkerService, InstantiationType.Delayed);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { basename } from 'vs/base/common/path';\nimport { TernarySearchTree } from 'vs/base/common/ternarySearchTree';\nimport { URI } from 'vs/base/common/uri';\nimport { IRequestHandler } from 'vs/base/common/worker/simpleWorker';\nimport { IV8Profile, Utils } from 'vs/platform/profiling/common/profiling';\nimport { IProfileModel, BottomUpSample, buildModel, BottomUpNode, processNode, CdpCallFrame } from 'vs/platform/profiling/common/profilingModel';\nimport { BottomUpAnalysis, IProfileAnalysisWorker, ProfilingOutput } from 'vs/platform/profiling/electron-sandbox/profileAnalysisWorkerService';\n\nexport function create(): IRequestHandler {\n\treturn new ProfileAnalysisWorker();\n}\n\nclass ProfileAnalysisWorker implements IRequestHandler, IProfileAnalysisWorker {\n\n\t_requestHandlerBrand: any;\n\n\tanalyseBottomUp(profile: IV8Profile): BottomUpAnalysis {\n\t\tif (!Utils.isValidProfile(profile)) {\n\t\t\treturn { kind: ProfilingOutput.Irrelevant, samples: [] };\n\t\t}\n\n\t\tconst model = buildModel(profile);\n\t\tconst samples = bottomUp(model, 5)\n\t\t\t.filter(s => !s.isSpecial);\n\n\t\tif (samples.length === 0 || samples[0].percentage < 10) {\n\t\t\t// ignore this profile because 90% of the time is spent inside \"special\" frames\n\t\t\t// like idle, GC, or program\n\t\t\treturn { kind: ProfilingOutput.Irrelevant, samples: [] };\n\t\t}\n\n\t\treturn { kind: ProfilingOutput.Interesting, samples };\n\t}\n\n\tanalyseByUrlCategory(profile: IV8Profile, categories: [url: URI, category: string][]): [category: string, aggregated: number][] {\n\n\t\t// build search tree\n\t\tconst searchTree = TernarySearchTree.forUris<string>();\n\t\tsearchTree.fill(categories);\n\n\t\t// cost by categories\n\t\tconst model = buildModel(profile);\n\t\tconst aggegrateByCategory = new Map<string, number>();\n\n\t\tfor (const node of model.nodes) {\n\t\t\tconst loc = model.locations[node.locationId];\n\t\t\tlet category: string | undefined;\n\t\t\ttry {\n\t\t\t\tcategory = searchTree.findSubstr(URI.parse(loc.callFrame.url));\n\t\t\t} catch {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t\tif (!category) {\n\t\t\t\tcategory = printCallFrameShort(loc.callFrame);\n\t\t\t}\n\t\t\tconst value = aggegrateByCategory.get(category) ?? 0;\n\t\t\tconst newValue = value + node.selfTime;\n\t\t\taggegrateByCategory.set(category, newValue);\n\t\t}\n\n\t\tconst result: [string, number][] = [];\n\t\tfor (const [key, value] of aggegrateByCategory) {\n\t\t\tresult.push([key, value]);\n\t\t}\n\t\treturn result;\n\t}\n}\n\nfunction isSpecial(call: CdpCallFrame): boolean {\n\treturn call.functionName.startsWith('(') && call.functionName.endsWith(')');\n}\n\nfunction printCallFrameShort(frame: CdpCallFrame): string {\n\tlet result = frame.functionName || '(anonymous)';\n\tif (frame.url) {\n\t\tresult += '#';\n\t\tresult += basename(frame.url);\n\t\tif (frame.lineNumber >= 0) {\n\t\t\tresult += ':';\n\t\t\tresult += frame.lineNumber + 1;\n\t\t}\n\t\tif (frame.columnNumber >= 0) {\n\t\t\tresult += ':';\n\t\t\tresult += frame.columnNumber + 1;\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction printCallFrameStackLike(frame: CdpCallFrame): string {\n\tlet result = frame.functionName || '(anonymous)';\n\tif (frame.url) {\n\t\tresult += ' (';\n\t\tresult += frame.url;\n\t\tif (frame.lineNumber >= 0) {\n\t\t\tresult += ':';\n\t\t\tresult += frame.lineNumber + 1;\n\t\t}\n\t\tif (frame.columnNumber >= 0) {\n\t\t\tresult += ':';\n\t\t\tresult += frame.columnNumber + 1;\n\t\t}\n\t\tresult += ')';\n\t}\n\treturn result;\n}\n\nfunction getHeaviestLocationIds(model: IProfileModel, topN: number) {\n\tconst stackSelfTime: { [locationId: number]: number } = {};\n\tfor (const node of model.nodes) {\n\t\tstackSelfTime[node.locationId] = (stackSelfTime[node.locationId] || 0) + node.selfTime;\n\t}\n\n\tconst locationIds = Object.entries(stackSelfTime)\n\t\t.sort(([, a], [, b]) => b - a)\n\t\t.slice(0, topN)\n\t\t.map(([locationId]) => Number(locationId));\n\n\treturn new Set(locationIds);\n}\n\nfunction bottomUp(model: IProfileModel, topN: number) {\n\tconst root = BottomUpNode.root();\n\tconst locationIds = getHeaviestLocationIds(model, topN);\n\n\tfor (const node of model.nodes) {\n\t\tif (locationIds.has(node.locationId)) {\n\t\t\tprocessNode(root, node, model);\n\t\t\troot.addNode(node);\n\t\t}\n\t}\n\n\tconst result = Object.values(root.children)\n\t\t.sort((a, b) => b.selfTime - a.selfTime)\n\t\t.slice(0, topN);\n\n\tconst samples: BottomUpSample[] = [];\n\n\tfor (const node of result) {\n\n\t\tconst sample: BottomUpSample = {\n\t\t\tselfTime: Math.round(node.selfTime / 1000),\n\t\t\ttotalTime: Math.round(node.aggregateTime / 1000),\n\t\t\tlocation: printCallFrameShort(node.callFrame),\n\t\t\tabsLocation: printCallFrameStackLike(node.callFrame),\n\t\t\turl: node.callFrame.url,\n\t\t\tcaller: [],\n\t\t\tpercentage: Math.round(node.selfTime / (model.duration / 100)),\n\t\t\tisSpecial: isSpecial(node.callFrame)\n\t\t};\n\n\t\t// follow the heaviest caller paths\n\t\tconst stack = [node];\n\t\twhile (stack.length) {\n\t\t\tconst node = stack.pop()!;\n\t\t\tlet top: BottomUpNode | undefined;\n\t\t\tfor (const candidate of Object.values(node.children)) {\n\t\t\t\tif (!top || top.selfTime < candidate.selfTime) {\n\t\t\t\t\ttop = candidate;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (top) {\n\t\t\t\tconst percentage = Math.round(top.selfTime / (node.selfTime / 100));\n\t\t\t\tsample.caller.push({\n\t\t\t\t\tpercentage,\n\t\t\t\t\tlocation: printCallFrameShort(top.callFrame),\n\t\t\t\t\tabsLocation: printCallFrameStackLike(top.callFrame),\n\t\t\t\t});\n\t\t\t\tstack.push(top);\n\t\t\t}\n\t\t}\n\n\t\tsamples.push(sample);\n\t}\n\n\treturn samples;\n}\n"],"mappings":"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","names":["__m","__M","deps","result","i","len","exports","$BV","policyName","policyOptions","monacoEnvironment","err","errors_1","$yg","$zg","$Ag","$Bg","$Cg","$Dg","$Eg","$Fg","$Gg","$Hg","$Ig","$Jg","$Kg","$Lg","$Mg","$Ng","$Og","code","charCode_1","osPath","path_1","path","sep","firstLetter","pos","start","platform_1","WINDOWS_INVALID_FILE_CHARS","UNIX_INVALID_FILE_CHARS","WINDOWS_FORBIDDEN_NAMES","name","isWindowsOS","invalidFileChars","pathA","pathB","ignoreCase","identityEquals","strings_1","base","parentCandidate","separator","sepOffset","char0","candidate","cwd","pathNormalized","rawPath","segments","line","column","segment","segmentAsNumber","types_1","pathChars","windowsSafePathFirstChars","parent","prefix","randomLength","suffix","pathCharsTouse","randomFileName","$Ii","key","a","aCode","thisCode","$Ji","e","justSeps","$Ki","f","g","ch","UriIteratorState","$Li","TernarySearchTreeNode","tmp","Dir","$Mi","ignorePathCasing","ignoreQueryAndFragment","values","keys","arr","arrays_1","k","entry","element","iter","node","stack","val","oldElement","bf","d1","d2","superStr","min","value","newChild","dir","allowValue","callback","bucket","nodeIsBalanced","$Pg","$Qg","$Ug","Schemas","target","scheme","uri_1","schemes","RemoteAuthoritiesImpl","schema","delegate","product","serverBasePath","paths","authority","host","port","connectionToken","uri","errors","query","platform","basePath","FileAccessImpl","resourcePath","require","uriOrModule","moduleIdToUrl","COI","coiHeaders","coiSearchParamName","getHeadersFromQuery","url","params","addSearchParam","urlOrSearch","coop","coep","$8g","$qh","$rh","$9g","uri1","uri2","ignoreFragment","network_1","extpath","resource","pathFragment","dirname","normalizedPath","from","to","relativePath","fromPath","toPath","newURI","a1","a2","fsp","p","isRootSep","_","items","resourceAccessor","distinctParents","candidateResource","otherItem","index","DataUri","parseMetaData","dataUri","metadata","property","mime","localScheme","$GV","$HV","ttPolicy","trustedTypes_1","blobUrl","options","getWorker","label","workerUrl","workerMain","scriptPath","myPath","workerBaseUrl","js","blob","end","isPromiseLike","obj","WebWorker","lifecycle_1","moduleId","id","onMessageCallback","onErrorCallback","workerOrPromise","w","ev","message","transfer","$IV","workerId","simpleWorker_1","nls","data","$rj","$sj","$tj","exceptionToErrorMessage","exception","verbose","detectSystemErrorMessage","stackToString","error","arrays","msg","types","detail","messageOrError","actions","TokenType","hintDidYouMean","meant","nls_1","hintDidYouForgetToOpenOrCloseQuote","hintDidYouForgetToEscapeSlash","$Bj","token","isTripleEq","expected","type","additional","offset","lexeme","errToken","match","keyword","inEscape","inCharacterClass","$Di","ctor","staticArguments","supportsDelayedInstantiation","$Qs","$Rs","_registry","InstantiationType","ctorOrDescriptor","descriptors_1","$Gi","$Hi","_util","getServiceDependencies","storeServiceDependency","serviceId","serviceIdentifier","$Cj","$Fj","$Gj","$Zj","CONSTANT_VALUES","hasOwnProperty","ContextKeyExprType","defaultConfig","errorEmptyString","hintEmptyString","errorNoInAfterNot","errorClosingParenthesis","errorUnexpectedToken","hintUnexpectedToken","errorUnexpectedEOF","hintUnexpectedEOF","$Dj","scanner_1","input","expr","peek","additionalInfo","right","$Ej","$Hj","$Ij","$Oj","regexLexeme","closingSlashIndex","flags","regexp","$Tj","lexemeReconstruction","followingToken","parenBalance","serializedValue","regex","caseIgnoreFlag","$Rj","$Sj","$Pj","$Qj","got","$Jj","$Kj","$Nj","$Lj","$Mj","$Vj","$Wj","serialized","whenClauses","parser","whenClause","se","pe","b","aExpr","bExpr","cmp","other","context","mapFnc","negated","constantValue","c","cmp1","d","cmp2","trueValue","valueKey","source","item","falseValue","withFloatOrStr","_value","thisSource","otherSource","$Uj","actual","eliminateConstantsInArray","newArr","newExpr","j","_expr","extraRedundantCheck","r","exprArr","hasTrue","lastElement","secondToLastElement","isFinished","resultElement","el","hasFalse","LEFT","RIGHT","all","left","getTerminals","$Xj","defaultValue","metaOrHide","instantiation_1","key1","key2","value1","value2","q","allElementsIncluded","pIndex","qIndex","$ck","log","$ok","$pk","$qk","$rk","now","thing","LogLevel","logger","level","format","args","errorMessage_1","$fk","event_1","$gk","h","array","$hk","logLevel","$ik","$jk","$kk","$lk","loggerResources","map_1","loggerResource","resourceOrId","idOrResource","hash_1","loggerEntry","resources_1","arg1","arg2","visibility","existing","$mk","$nk","environmentService","contextkey_1","Utils","isValidProfile","profile","rewriteAbsolutePaths","replace","computeAggregateTime","nodes","row","total","child","ensureSourceLocations","locationIdCounter","locationsByRef","getLocationIdFor","callFrame","ref","tick","l","$Mlc","samples","timeDeltas","locations","src","idMap","mapId","nodeId","duration","lastNodeTime","location","$Nlc","$Olc","aggregate","model","initialNode","$Plc","telemetryService","logService","sendAsErrorTelemtry","sample","perfBaseline","fakeError","PerformanceError","trace","TelemetryLevel","TelemetryConfiguration","ProfilingOutput","ProfileAnalysisWorkerService","defaultWorkerFactory_1","worker","callFrameClassifier","profilingTelemetrySpec_1","__decorate","__param","telemetry_1","log_1","extensions_1","create","ProfileAnalysisWorker","profiling_1","profileAnalysisWorkerService_1","profilingModel_1","bottomUp","s","categories","searchTree","ternarySearchTree_1","aggegrateByCategory","loc","category","printCallFrameShort","newValue","isSpecial","call","frame","printCallFrameStackLike","getHeaviestLocationIds","topN","stackSelfTime","locationIds","locationId","root","top","percentage"],"file":"profileAnalysisWorker.js"}